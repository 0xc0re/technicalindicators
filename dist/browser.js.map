{"version":3,"file":"browser.js","sources":["../lib/config.js","../lib/Utils/NumberFormatter.js","../lib/moving_averages/SMA.js","../lib/moving_averages/EMA.js","../lib/moving_averages/WMA.js","../lib/moving_averages/WEMA.js","../lib/moving_averages/MACD.js","../lib/Utils/AverageGain.js","../lib/Utils/AverageLoss.js","../lib/oscillators/RSI.js","../lib/Utils/SD.js","../lib/volatility/BollingerBands.js","../lib/moving_averages/WilderSmoothing.js","../lib/directionalmovement/TrueRange.js","../lib/directionalmovement/ADX.js","../lib/directionalmovement/ATR.js","../lib/momentum/ROC.js","../lib/momentum/KST.js","../lib/momentum/Stochastic.js","../lib/momentum/WilliamsR.js","../lib/volume/ADL.js","../lib/volume/OBV.js","../lib/momentum/TRIX.js","../lib/volume/ForceIndex.js","../lib/oscillators/CCI.js","../lib/volume/VWAP.js","../lib/chart_types/Renko.js","../lib/chart_types/HeikinAshi.js","../lib/candlestick/MorningStar.js","../lib/candlestick/BullishEngulfingPattern.js","../lib/candlestick/BullishHarami.js","../lib/candlestick/BullishHaramiCross.js","../lib/candlestick/Doji.js","../lib/candlestick/MorningDojiStar.js","../lib/candlestick/DownsideTasukiGap.js","../lib/candlestick/BullishMarubozu.js","../lib/candlestick/PiercingLine.js","../lib/candlestick/ThreeWhiteSoldiers.js","../lib/candlestick/Bullish.js","../lib/candlestick/BearishEngulfingPattern.js","../lib/candlestick/BearishHarami.js","../lib/candlestick/BearishHaramiCross.js","../lib/candlestick/EveningDojiStar.js","../lib/candlestick/EveningStar.js","../lib/candlestick/BearishMarubozu.js","../lib/candlestick/ThreeBlackCrows.js","../lib/candlestick/Bearish.js","../lib/candlestick/AbandonedBaby.js","../lib/candlestick/DarkCloudCover.js","../lib/candlestick/DragonFlyDoji.js","../lib/candlestick/GraveStoneDoji.js","../lib/candlestick/BullishSpinningTop.js","../lib/candlestick/BearishSpinningTop.js","../lib/drawingtools/fibonacci.js","../index.js","../lib/indicator/indicator.js","../lib/Utils/LinkedList.js","../lib/Utils/FixedSizeLinkedList.js","../lib/directionalmovement/MinusDM.js","../lib/directionalmovement/PlusDM.js","../lib/StockData.js","../lib/candlestick/CandlestickFinder.js"],"sourcesContent":["let config = {};\nexport function setConfig(key, value) {\n    config[key] = value;\n}\nexport function getConfig(key) {\n    return config[key];\n}\n//# sourceMappingURL=config.js.map","import { getConfig } from '../config';\nexport function format(v) {\n    let precision = getConfig('precision');\n    if (precision) {\n        return parseFloat(v.toPrecision(precision));\n    }\n    return v;\n}\n//# sourceMappingURL=NumberFormatter.js.map","//STEP 1. Import Necessary indicator or rather last step\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\n//STEP 2. Create the input for the indicator, mandatory should be in the constructor\nexport class MAInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n    }\n}\n//STEP3. Add class based syntax with export\nexport class SMA extends Indicator {\n    constructor(input) {\n        super(input);\n        this.period = input.period;\n        this.price = input.values;\n        var genFn = (function* (period) {\n            var list = new LinkedList();\n            var sum = 0;\n            var counter = 1;\n            var current = yield;\n            var result;\n            list.push(0);\n            while (true) {\n                if (counter < period) {\n                    counter++;\n                    list.push(current);\n                    sum = sum + current;\n                }\n                else {\n                    sum = sum - list.shift() + current;\n                    result = ((sum) / period);\n                    list.push(current);\n                }\n                current = yield result;\n            }\n        });\n        this.generator = genFn(this.period);\n        this.generator.next();\n        this.result = [];\n        this.price.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nSMA.calculate = sma;\nexport function sma(input) {\n    Indicator.reverseInputs(input);\n    var result = new SMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//STEP 6. Run the tests \n//# sourceMappingURL=SMA.js.map","import { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class EMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var exponent = (2 / (period + 1));\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [] });\n        var genFn = (function* () {\n            var tick = yield;\n            var prevEma;\n            while (true) {\n                if (prevEma && tick) {\n                    prevEma = ((tick - prevEma) * exponent) + prevEma;\n                    tick = yield prevEma;\n                }\n                else {\n                    tick = yield;\n                    prevEma = sma.nextValue(tick);\n                    if (prevEma)\n                        tick = yield prevEma;\n                }\n            }\n        });\n        this.generator = genFn();\n        this.generator.next();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nEMA.calculate = ema;\nexport function ema(input) {\n    Indicator.reverseInputs(input);\n    var result = new EMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=EMA.js.map","\"use strict\";\nimport { Indicator } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\nexport class WMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let data = new LinkedList();\n            let denominator = period * (period + 1) / 2;\n            while (true) {\n                if ((data.length) < period) {\n                    data.push(yield);\n                }\n                else {\n                    data.resetCursor();\n                    let result = 0;\n                    for (let i = 1; i <= period; i++) {\n                        result = result + (data.next() * i / (denominator));\n                    }\n                    var next = yield result;\n                    data.shift();\n                    data.push(next);\n                }\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick, index) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    //STEP 5. REMOVE GET RESULT FUNCTION\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nWMA.calculate = wma;\n;\nexport function wma(input) {\n    Indicator.reverseInputs(input);\n    var result = new WMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WMA.js.map","import { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class WEMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var exponent = 1 / period;\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [] });\n        var genFn = (function* () {\n            var tick = yield;\n            var prevEma;\n            while (true) {\n                if (prevEma && tick != undefined) {\n                    prevEma = ((tick - prevEma) * exponent) + prevEma;\n                    tick = yield prevEma;\n                }\n                else {\n                    tick = yield;\n                    prevEma = sma.nextValue(tick);\n                    if (prevEma)\n                        tick = yield prevEma;\n                }\n            }\n        });\n        this.generator = genFn();\n        this.generator.next();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nWEMA.calculate = wema;\nexport function wema(input) {\n    Indicator.reverseInputs(input);\n    var result = new WEMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WEMA.js.map","/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from './SMA';\nimport { EMA } from './EMA';\nexport class MACDInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n        this.SimpleMAOscillator = true;\n        this.SimpleMASignal = true;\n    }\n}\nexport class MACDOutput {\n}\nexport class MACD extends Indicator {\n    constructor(input) {\n        super(input);\n        var oscillatorMAtype = input.SimpleMAOscillator ? SMA : EMA;\n        var signalMAtype = input.SimpleMASignal ? SMA : EMA;\n        var fastMAProducer = new oscillatorMAtype({ period: input.fastPeriod, values: [], format: (v) => { return v; } });\n        var slowMAProducer = new oscillatorMAtype({ period: input.slowPeriod, values: [], format: (v) => { return v; } });\n        var signalMAProducer = new signalMAtype({ period: input.signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        this.generator = (function* () {\n            var index = 0;\n            var tick;\n            var MACD, signal, histogram, fast, slow;\n            while (true) {\n                if (index < input.slowPeriod) {\n                    tick = yield;\n                    fast = fastMAProducer.nextValue(tick);\n                    slow = slowMAProducer.nextValue(tick);\n                    index++;\n                    continue;\n                }\n                if (fast && slow) {\n                    MACD = fast - slow;\n                    signal = signalMAProducer.nextValue(MACD);\n                }\n                histogram = MACD - signal;\n                tick = yield ({\n                    //fast : fast,\n                    //slow : slow,\n                    MACD: format(MACD),\n                    signal: signal ? format(signal) : undefined,\n                    histogram: isNaN(histogram) ? undefined : format(histogram)\n                });\n                fast = fastMAProducer.nextValue(tick);\n                slow = slowMAProducer.nextValue(tick);\n            }\n        })();\n        this.generator.next();\n        input.values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nMACD.calculate = macd;\nexport function macd(input) {\n    Indicator.reverseInputs(input);\n    var result = new MACD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=MACD.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgGainInput extends IndicatorInput {\n}\nexport class AverageGain extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var gainSum = 0;\n            var avgGain;\n            var gain;\n            var lastValue;\n            while (true) {\n                gain = lastValue ? (currentValue - lastValue) : 0;\n                gain = gain ? gain : 0;\n                if (gain > 0) {\n                    gainSum = gainSum + gain;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgGain) {\n                    avgGain = gainSum / period;\n                }\n                else {\n                    avgGain = ((avgGain * (period - 1)) + (gain > 0 ? gain : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgGain = avgGain ? format(avgGain) : undefined;\n                currentValue = yield avgGain;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageGain.calculate = averagegain;\nexport function averagegain(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageGain(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageGain.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgLossInput extends IndicatorInput {\n}\nexport class AverageLoss extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var lossSum = 0;\n            var avgLoss;\n            var loss;\n            var lastValue;\n            while (true) {\n                loss = lastValue ? (lastValue - currentValue) : 0;\n                loss = loss ? loss : 0;\n                if (loss > 0) {\n                    lossSum = lossSum + loss;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgLoss) {\n                    avgLoss = lossSum / period;\n                }\n                else {\n                    avgLoss = ((avgLoss * (period - 1)) + (loss > 0 ? loss : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgLoss = avgLoss ? format(avgLoss) : undefined;\n                currentValue = yield avgLoss;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageLoss.calculate = averageloss;\nexport function averageloss(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageLoss(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageLoss.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/5/16.\n */\nimport { AverageGain } from '../Utils/AverageGain';\nimport { AverageLoss } from '../Utils/AverageLoss';\nexport class RSIInput extends IndicatorInput {\n}\nexport class RSI extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var values = input.values;\n        var GainProvider = new AverageGain({ period: period, values: [] });\n        var LossProvider = new AverageLoss({ period: period, values: [] });\n        this.generator = (function* (period) {\n            var current = yield;\n            var lastAvgGain, lastAvgLoss, RS, currentRSI;\n            while (true) {\n                lastAvgGain = GainProvider.nextValue(current);\n                lastAvgLoss = LossProvider.nextValue(current);\n                if (lastAvgGain && lastAvgLoss) {\n                    if (lastAvgLoss === 0) {\n                        currentRSI = 100;\n                    }\n                    else {\n                        RS = lastAvgGain / lastAvgLoss;\n                        currentRSI = parseFloat((100 - (100 / (1 + RS))).toFixed(2));\n                    }\n                }\n                current = yield currentRSI;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nRSI.calculate = rsi;\nexport function rsi(input) {\n    Indicator.reverseInputs(input);\n    var result = new RSI(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=RSI.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\n/**\n * Created by AAravindan on 5/7/16.\n */\n\"use strict\";\nexport class SDInput extends IndicatorInput {\n}\n;\nexport class SD extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick;\n            var mean;\n            var currentSet = new LinkedList(period);\n            ;\n            tick = yield;\n            var sd;\n            while (true) {\n                currentSet.push(tick);\n                mean = sma.nextValue(tick);\n                if (mean) {\n                    let sum = 0;\n                    for (let x of currentSet.iterator()) {\n                        sum = sum + (Math.pow((x - mean), 2));\n                    }\n                    sd = Math.sqrt(sum / (period));\n                }\n                tick = yield sd;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value != undefined)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nSD.calculate = sd;\nexport function sd(input) {\n    Indicator.reverseInputs(input);\n    var result = new SD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=SD.js.map","\"use strict\";\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { SD } from '../Utils/SD';\nexport class BollingerBandsInput extends IndicatorInput {\n}\n;\nexport class BollingerBandsOutput extends IndicatorInput {\n}\n;\nexport class BollingerBands extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var stdDev = input.stdDev;\n        var format = this.format;\n        var sma, sd;\n        this.result = [];\n        sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        sd = new SD({ period: period, values: [], format: (v) => { return v; } });\n        this.generator = (function* () {\n            var result;\n            var tick;\n            var calcSMA;\n            var calcsd;\n            tick = yield;\n            while (true) {\n                calcSMA = sma.nextValue(tick);\n                calcsd = sd.nextValue(tick);\n                if (calcSMA) {\n                    let middle = format(calcSMA);\n                    let upper = format(calcSMA + (calcsd * stdDev));\n                    let lower = format(calcSMA - (calcsd * stdDev));\n                    let pb = format((tick - lower) / (upper - lower));\n                    result = {\n                        middle: middle,\n                        upper: upper,\n                        lower: lower,\n                        pb: pb\n                    };\n                }\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nBollingerBands.calculate = bollingerbands;\nexport function bollingerbands(input) {\n    Indicator.reverseInputs(input);\n    var result = new BollingerBands(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=BollingerBands.js.map","import { Indicator } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\n//STEP3. Add class based syntax with export\nexport class WilderSmoothing extends Indicator {\n    constructor(input) {\n        super(input);\n        this.period = input.period;\n        this.price = input.values;\n        var genFn = (function* (period) {\n            var list = new LinkedList();\n            var sum = 0;\n            var counter = 1;\n            var current = yield;\n            var result = 0;\n            while (true) {\n                if (counter < period) {\n                    counter++;\n                    sum = sum + current;\n                    result = undefined;\n                }\n                else if (counter == period) {\n                    counter++;\n                    sum = sum + current;\n                    result = sum;\n                }\n                else {\n                    result = result - (result / period) + current;\n                }\n                current = yield result;\n            }\n        });\n        this.generator = genFn(this.period);\n        this.generator.next();\n        this.result = [];\n        this.price.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nWilderSmoothing.calculate = wildersmoothing;\nexport function wildersmoothing(input) {\n    Indicator.reverseInputs(input);\n    var result = new WilderSmoothing(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//STEP 6. Run the tests \n//# sourceMappingURL=WilderSmoothing.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class TrueRangeInput extends IndicatorInput {\n}\n;\nexport class TrueRange extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var current = yield;\n            var previousClose, result;\n            while (true) {\n                if (previousClose === undefined) {\n                    previousClose = current.close;\n                    current = yield result;\n                }\n                result = Math.max(current.high - current.low, isNaN(Math.abs(current.high - previousClose)) ? 0 : Math.abs(current.high - previousClose), isNaN(Math.abs(current.low - previousClose)) ? 0 : Math.abs(current.low - previousClose));\n                previousClose = current.close;\n                if (result != undefined) {\n                    result = format(result);\n                }\n                current = yield result;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nTrueRange.calculate = truerange;\nexport function truerange(input) {\n    Indicator.reverseInputs(input);\n    var result = new TrueRange(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TrueRange.js.map","import { WilderSmoothing } from '../moving_averages/WilderSmoothing';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { MDM } from './MinusDM';\nimport { PDM } from './PlusDM';\nimport { TrueRange } from './TrueRange';\nimport { WEMA } from '../moving_averages/WEMA';\nexport class ADXInput extends IndicatorInput {\n}\n;\nexport class ADXOutput extends IndicatorInput {\n}\n;\nexport class ADX extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        var plusDM = new PDM({\n            high: [],\n            low: []\n        });\n        var minusDM = new MDM({\n            high: [],\n            low: []\n        });\n        var emaPDM = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaMDM = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaTR = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaDX = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        var tr = new TrueRange({\n            low: [],\n            high: [],\n            close: [],\n        });\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        ADXOutput;\n        this.generator = (function* () {\n            var tick = yield;\n            var index = 0;\n            var lastATR, lastAPDM, lastAMDM, lastPDI, lastMDI, lastDX, smoothedDX;\n            lastATR = 0;\n            lastAPDM = 0;\n            lastAMDM = 0;\n            while (true) {\n                let calcTr = tr.nextValue(tick);\n                let calcPDM = plusDM.nextValue(tick);\n                let calcMDM = minusDM.nextValue(tick);\n                if (calcTr === undefined) {\n                    tick = yield;\n                    continue;\n                }\n                let lastATR = emaTR.nextValue(calcTr);\n                let lastAPDM = emaPDM.nextValue(calcPDM);\n                let lastAMDM = emaMDM.nextValue(calcMDM);\n                if ((lastATR != undefined) && (lastAPDM != undefined) && (lastAMDM != undefined)) {\n                    lastPDI = (lastAPDM) * 100 / lastATR;\n                    lastMDI = (lastAMDM) * 100 / lastATR;\n                    let diDiff = Math.abs(lastPDI - lastMDI);\n                    let diSum = (lastPDI + lastMDI);\n                    lastDX = (diDiff / diSum) * 100;\n                    smoothedDX = emaDX.nextValue(lastDX);\n                    // console.log(tick.high.toFixed(2), tick.low.toFixed(2), tick.close.toFixed(2) , calcTr.toFixed(2), calcPDM.toFixed(2), calcMDM.toFixed(2), lastATR.toFixed(2), lastAPDM.toFixed(2), lastAMDM.toFixed(2), lastPDI.toFixed(2), lastMDI.toFixed(2), diDiff.toFixed(2), diSum.toFixed(2), lastDX.toFixed(2));\n                }\n                tick = yield { adx: smoothedDX, pdi: lastPDI, mdi: lastMDI };\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value != undefined && result.value.adx != undefined) {\n                this.result.push({ adx: format(result.value.adx), pdi: format(result.value.pdi), mdi: format(result.value.mdi) });\n            }\n        });\n    }\n    ;\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result != undefined && result.adx != undefined) {\n            return { adx: this.format(result.adx), pdi: this.format(result.pdi), mdi: this.format(result.mdi) };\n        }\n    }\n    ;\n}\nADX.calculate = adx;\nexport function adx(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADX.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nimport { WEMA } from '../moving_averages/WEMA';\nimport { TrueRange } from './TrueRange';\nexport class ATRInput extends IndicatorInput {\n}\n;\nexport class ATR extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        var trueRange = new TrueRange({\n            low: [],\n            high: [],\n            close: []\n        });\n        var wema = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var avgTrueRange, trange;\n            ;\n            while (true) {\n                trange = trueRange.nextValue({\n                    low: tick.low,\n                    high: tick.high,\n                    close: tick.close\n                });\n                if (trange === undefined) {\n                    avgTrueRange = undefined;\n                }\n                else {\n                    avgTrueRange = wema.nextValue(trange);\n                }\n                tick = yield avgTrueRange;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nATR.calculate = atr;\nexport function atr(input) {\n    Indicator.reverseInputs(input);\n    var result = new ATR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ATR.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ROCInput extends IndicatorInput {\n}\nexport class ROC extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let index = 1;\n            var pastPeriods = new LinkedList(period);\n            ;\n            var tick = yield;\n            var roc;\n            while (true) {\n                pastPeriods.push(tick);\n                if (index < period) {\n                    index++;\n                }\n                else {\n                    roc = ((tick - pastPeriods.lastShift) / (pastPeriods.lastShift)) * 100;\n                }\n                tick = yield roc;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined && (!isNaN(result.value))) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value != undefined && (!isNaN(nextResult.value))) {\n            return this.format(nextResult.value);\n        }\n    }\n    ;\n}\nROC.calculate = roc;\n;\nexport function roc(input) {\n    Indicator.reverseInputs(input);\n    var result = new ROC(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ROC.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { ROC } from './ROC';\nexport class KSTInput extends IndicatorInput {\n}\nexport class KSTOutput {\n}\nexport class KST extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let rocPer1 = input.ROCPer1;\n        let rocPer2 = input.ROCPer2;\n        let rocPer3 = input.ROCPer3;\n        let rocPer4 = input.ROCPer4;\n        let smaPer1 = input.SMAROCPer1;\n        let smaPer2 = input.SMAROCPer2;\n        let smaPer3 = input.SMAROCPer3;\n        let smaPer4 = input.SMAROCPer4;\n        let signalPeriod = input.signalPeriod;\n        let roc1 = new ROC({ period: rocPer1, values: [] });\n        let roc2 = new ROC({ period: rocPer2, values: [] });\n        let roc3 = new ROC({ period: rocPer3, values: [] });\n        let roc4 = new ROC({ period: rocPer4, values: [] });\n        let sma1 = new SMA({ period: smaPer1, values: [], format: (v) => { return v; } });\n        let sma2 = new SMA({ period: smaPer2, values: [], format: (v) => { return v; } });\n        let sma3 = new SMA({ period: smaPer3, values: [], format: (v) => { return v; } });\n        let sma4 = new SMA({ period: smaPer4, values: [], format: (v) => { return v; } });\n        let signalSMA = new SMA({ period: signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        let firstResult = Math.max(rocPer1 + smaPer1, rocPer2 + smaPer2, rocPer3 + smaPer3, rocPer4 + smaPer4);\n        this.generator = (function* () {\n            let index = 1;\n            let tick = yield;\n            let kst;\n            let RCMA1, RCMA2, RCMA3, RCMA4, signal, result;\n            while (true) {\n                let roc1Result = roc1.nextValue(tick);\n                let roc2Result = roc2.nextValue(tick);\n                let roc3Result = roc3.nextValue(tick);\n                let roc4Result = roc4.nextValue(tick);\n                RCMA1 = (roc1Result !== undefined) ? sma1.nextValue(roc1Result) : undefined;\n                RCMA2 = (roc2Result !== undefined) ? sma2.nextValue(roc2Result) : undefined;\n                RCMA3 = (roc3Result !== undefined) ? sma3.nextValue(roc3Result) : undefined;\n                RCMA4 = (roc4Result !== undefined) ? sma4.nextValue(roc4Result) : undefined;\n                if (index < firstResult) {\n                    index++;\n                }\n                else {\n                    kst = (RCMA1 * 1) + (RCMA2 * 2) + (RCMA3 * 3) + (RCMA4 * 4);\n                }\n                signal = (kst !== undefined) ? signalSMA.nextValue(kst) : undefined;\n                result = kst !== undefined ? {\n                    kst: format(kst),\n                    signal: signal ? format(signal) : undefined\n                } : undefined;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value != undefined)\n            return nextResult.value;\n    }\n    ;\n}\nKST.calculate = kst;\nexport function kst(input) {\n    Indicator.reverseInputs(input);\n    var result = new KST(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=KST.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/10/16.\n */\n\"use strict\";\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nimport { SMA } from '../moving_averages/SMA';\nexport class StochasticInput extends IndicatorInput {\n}\n;\nexport class StochasticOutput {\n}\n;\nexport class Stochastic extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let signalPeriod = input.signalPeriod;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%K = (Current Close - Lowest Low)/(Highest High - Lowest Low) * 100\n        //%D = 3-day SMA of %K\n        //\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%K is multiplied by 100 to move the decimal point two places\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let dSma = new SMA({\n                period: signalPeriod,\n                values: [],\n                format: (v) => { return v; }\n            });\n            let k, d;\n            var tick = yield;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                let periodLow = pastLowPeriods.periodLow;\n                k = (tick.close - periodLow) / (pastHighPeriods.periodHigh - periodLow) * 100;\n                d = dSma.nextValue(k);\n                tick = yield {\n                    k: format(k),\n                    d: d ? format(d) : undefined\n                };\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(input) {\n        let nextResult = this.generator.next(input);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nStochastic.calculate = stochastic;\nexport function stochastic(input) {\n    Indicator.reverseInputs(input);\n    var result = new Stochastic(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=Stochastic.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class WilliamsRInput extends IndicatorInput {\n}\n;\nexport class WilliamsR extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%R = (Highest High - Close)/(Highest High - Lowest Low) * -100\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%R is multiplied by -100 correct the inversion and move the decimal.\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let periodLow;\n            let periodHigh;\n            var tick = yield;\n            let williamsR;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                periodLow = pastLowPeriods.periodLow;\n                periodHigh = pastHighPeriods.periodHigh;\n                williamsR = format((periodHigh - tick.close) / (periodHigh - periodLow) * -100);\n                tick = yield williamsR;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((low, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value != undefined)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nWilliamsR.calculate = williamsr;\nexport function williamsr(input) {\n    Indicator.reverseInputs(input);\n    var result = new WilliamsR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=WilliamsR.js.map","/**\n * Created by AAravindan on 5/17/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class ADLInput extends IndicatorInput {\n}\nexport class ADL extends Indicator {\n    constructor(input) {\n        super(input);\n        var highs = input.high;\n        var lows = input.low;\n        var closes = input.close;\n        var volumes = input.volume;\n        if (!((lows.length === highs.length) && (highs.length === closes.length) && (highs.length === volumes.length))) {\n            throw ('Inputs(low,high, close, volumes) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            tick = yield;\n            while (true) {\n                let moneyFlowMultiplier = ((tick.close - tick.low) - (tick.high - tick.close)) / (tick.high - tick.low);\n                let moneyFlowVolume = moneyFlowMultiplier * tick.volume;\n                result = result + moneyFlowVolume;\n                tick = yield Math.round(result);\n            }\n        })();\n        this.generator.next();\n        highs.forEach((tickHigh, index) => {\n            var tickInput = {\n                high: tickHigh,\n                low: lows[index],\n                close: closes[index],\n                volume: volumes[index]\n            };\n            var result = this.generator.next(tickInput);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nADL.calculate = adl;\nexport function adl(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADL(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADL.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/17/16.\n */\n\"use strict\";\nexport class OBVInput extends IndicatorInput {\n}\nexport class OBV extends Indicator {\n    constructor(input) {\n        super(input);\n        var closes = input.close;\n        var volumes = input.volume;\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            var lastClose;\n            tick = yield;\n            if (tick.close && (typeof tick.close === 'number')) {\n                lastClose = tick.close;\n                tick = yield;\n            }\n            while (true) {\n                if (lastClose < tick.close) {\n                    result = result + tick.volume;\n                }\n                else if (tick.close < lastClose) {\n                    result = result - tick.volume;\n                }\n                lastClose = tick.close;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        closes.forEach((close, index) => {\n            let tickInput = {\n                close: closes[index],\n                volume: volumes[index]\n            };\n            let result = this.generator.next(tickInput);\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nOBV.calculate = obv;\nexport function obv(input) {\n    Indicator.reverseInputs(input);\n    var result = new OBV(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=OBV.js.map","/**\n * Created by AAravindan on 5/9/16.\n */\n\"use strict\";\nimport { ROC } from './ROC.js';\nimport { EMA } from '../moving_averages/EMA.js';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class TRIXInput extends IndicatorInput {\n}\n;\nexport class TRIX extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let period = input.period;\n        let format = this.format;\n        let ema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfemaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let trixROC = new ROC({ period: 1, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            let tick = yield;\n            while (true) {\n                let initialema = ema.nextValue(tick);\n                let smoothedResult = initialema ? emaOfema.nextValue(initialema) : undefined;\n                let doubleSmoothedResult = smoothedResult ? emaOfemaOfema.nextValue(smoothedResult) : undefined;\n                let result = doubleSmoothedResult ? trixROC.nextValue(doubleSmoothedResult) : undefined;\n                tick = yield result ? format(result) : undefined;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nTRIX.calculate = trix;\nexport function trix(input) {\n    Indicator.reverseInputs(input);\n    var result = new TRIX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TRIX.js.map","import { EMA } from '../moving_averages/EMA';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class ForceIndexInput extends IndicatorInput {\n    constructor() {\n        super(...arguments);\n        this.period = 1;\n    }\n}\n;\nexport class ForceIndex extends Indicator {\n    constructor(input) {\n        super(input);\n        var closes = input.close;\n        var volumes = input.volume;\n        var period = input.period || 1;\n        if (!((volumes.length === closes.length))) {\n            throw ('Inputs(volume, close) not of equal size');\n        }\n        let emaForceIndex = new EMA({ values: [], period: period });\n        this.result = [];\n        this.generator = (function* () {\n            var previousTick = yield;\n            var tick = yield;\n            let forceIndex;\n            while (true) {\n                forceIndex = (tick.close - previousTick.close) * tick.volume;\n                previousTick = tick;\n                tick = yield emaForceIndex.nextValue(forceIndex);\n            }\n        })();\n        this.generator.next();\n        volumes.forEach((tick, index) => {\n            var result = this.generator.next({\n                close: closes[index],\n                volume: volumes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result != undefined) {\n            return result;\n        }\n    }\n    ;\n}\nForceIndex.calculate = forceindex;\nexport function forceindex(input) {\n    Indicator.reverseInputs(input);\n    var result = new ForceIndex(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ForceIndex.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class CCIInput extends IndicatorInput {\n}\n;\nexport class CCI extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        let constant = .015;\n        var currentTpSet = new LinkedList(period);\n        ;\n        var tpSMACalculator = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            while (true) {\n                let tp = (tick.high + tick.low + tick.close) / 3;\n                currentTpSet.push(tp);\n                let smaTp = tpSMACalculator.nextValue(tp);\n                let meanDeviation = null;\n                let cci;\n                let sum = 0;\n                if (smaTp != undefined) {\n                    //First, subtract the most recent 20-period average of the typical price from each period's typical price. \n                    //Second, take the absolute values of these numbers.\n                    //Third,sum the absolute values. \n                    for (let x of currentTpSet.iterator()) {\n                        sum = sum + (Math.abs(x - smaTp));\n                    }\n                    //Fourth, divide by the total number of periods (20). \n                    meanDeviation = sum / 20;\n                    cci = (tp - smaTp) / (constant * meanDeviation);\n                }\n                tick = yield cci;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result != undefined) {\n            return result;\n        }\n    }\n    ;\n}\nCCI.calculate = cci;\nexport function cci(input) {\n    Indicator.reverseInputs(input);\n    var result = new CCI(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=CCI.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class VWAPInput extends IndicatorInput {\n}\n;\nexport class VWAP extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var volumes = input.volume;\n        var period = input.period;\n        var format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            let cumulativeTotal = 0;\n            let cumulativeVolume = 0;\n            let vwap;\n            while (true) {\n                let typicalPrice = (tick.high + tick.low + tick.close) / 3;\n                let total = tick.volume * typicalPrice;\n                cumulativeTotal = cumulativeTotal + total;\n                cumulativeVolume = cumulativeVolume + tick.volume;\n                tick = yield cumulativeTotal / cumulativeVolume;\n                ;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index],\n                volume: volumes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result != undefined) {\n            return result;\n        }\n    }\n    ;\n}\nVWAP.calculate = vwap;\nexport function vwap(input) {\n    Indicator.reverseInputs(input);\n    var result = new VWAP(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=VWAP.js.map","import { CandleList } from '../StockData';\nimport { atr } from '../directionalmovement/ATR';\n/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class RenkoInput extends IndicatorInput {\n}\nclass Renko extends Indicator {\n    constructor(input) {\n        super(input);\n        var format = this.format;\n        let useATR = input.useATR;\n        let brickSize = input.brickSize || 0;\n        if (useATR) {\n            let atrResult = atr(Object.assign({}, input));\n            brickSize = atrResult[atrResult.length - 1];\n        }\n        this.result = new CandleList();\n        ;\n        if (brickSize === 0) {\n            console.error('Not enough data to calculate brickSize for renko when using ATR');\n            return;\n        }\n        let lastOpen = 0;\n        let lastHigh = 0;\n        let lastLow = Infinity;\n        let lastClose = 0;\n        let lastVolume = 0;\n        let lastTimestamp = 0;\n        this.generator = (function* () {\n            let candleData = yield;\n            while (true) {\n                //Calculating first bar\n                if (lastOpen === 0) {\n                    lastOpen = candleData.close;\n                    lastHigh = candleData.high;\n                    lastLow = candleData.low;\n                    lastClose = candleData.close;\n                    lastVolume = candleData.volume;\n                    lastTimestamp = candleData.timestamp;\n                    candleData = yield;\n                    continue;\n                }\n                let absoluteMovementFromClose = Math.abs(candleData.close - lastClose);\n                let absoluteMovementFromOpen = Math.abs(candleData.close - lastOpen);\n                if ((absoluteMovementFromClose >= brickSize) && (absoluteMovementFromOpen >= brickSize)) {\n                    let reference = absoluteMovementFromClose > absoluteMovementFromOpen ? lastOpen : lastClose;\n                    let calculated = {\n                        open: reference,\n                        high: lastHigh > candleData.high ? lastHigh : candleData.high,\n                        low: lastLow < candleData.Low ? lastLow : candleData.low,\n                        close: reference > candleData.close ? (reference - brickSize) : (reference + brickSize),\n                        volume: lastVolume + candleData.volume,\n                        timestamp: candleData.timestamp\n                    };\n                    lastOpen = calculated.open;\n                    lastHigh = calculated.close;\n                    lastLow = calculated.close;\n                    lastClose = calculated.close;\n                    lastVolume = 0;\n                    candleData = yield calculated;\n                }\n                else {\n                    lastHigh = lastHigh > candleData.high ? lastHigh : candleData.high;\n                    lastLow = lastLow < candleData.Low ? lastLow : candleData.low;\n                    lastVolume = lastVolume + candleData.volume;\n                    lastTimestamp = candleData.timestamp;\n                    candleData = yield;\n                }\n            }\n        })();\n        this.generator.next();\n        input.low.forEach((tick, index) => {\n            var result = this.generator.next({\n                open: input.open[index],\n                high: input.high[index],\n                low: input.low[index],\n                close: input.close[index],\n                volume: input.volume[index],\n                timestamp: input.timestamp[index]\n            });\n            if (result.value) {\n                this.result.open.push(result.value.open);\n                this.result.high.push(result.value.high);\n                this.result.low.push(result.value.low);\n                this.result.close.push(result.value.close);\n                this.result.volume.push(result.value.volume);\n                this.result.timestamp.push(result.value.timestamp);\n            }\n        });\n    }\n    nextValue(price) {\n        console.error('Cannot calculate next value on Renko, Every value has to be recomputed for every change, use calcualte method');\n        return null;\n    }\n    ;\n}\nRenko.calculate = renko;\nexport function renko(input) {\n    Indicator.reverseInputs(input);\n    var result = new Renko(input).result;\n    if (input.reversedInput) {\n        result.open.reverse();\n        result.high.reverse();\n        result.low.reverse();\n        result.close.reverse();\n        result.volume.reverse();\n        result.timestamp.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=Renko.js.map","import { CandleList } from '../StockData';\n/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class HeikinAshiInput extends IndicatorInput {\n}\nexport class HeikinAshi extends Indicator {\n    constructor(input) {\n        super(input);\n        var format = this.format;\n        this.result = new CandleList();\n        let lastOpen = null;\n        let lastHigh = 0;\n        let lastLow = Infinity;\n        let lastClose = 0;\n        let lastVolume = 0;\n        let lastTimestamp = 0;\n        this.generator = (function* () {\n            let candleData = yield;\n            let calculated = null;\n            while (true) {\n                if (lastOpen === null) {\n                    lastOpen = (candleData.close + candleData.open) / 2;\n                    lastHigh = candleData.high;\n                    lastLow = candleData.low;\n                    lastClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n                    lastVolume = (candleData.volume || 0);\n                    lastTimestamp = (candleData.timestamp || 0);\n                    calculated = {\n                        open: lastOpen,\n                        high: lastHigh,\n                        low: lastLow,\n                        close: lastClose,\n                        volume: candleData.volume || 0,\n                        timestamp: (candleData.timestamp || 0)\n                    };\n                }\n                else {\n                    let newClose = (candleData.close + candleData.open + candleData.high + candleData.low) / 4;\n                    let newOpen = (lastOpen + lastClose) / 2;\n                    let newHigh = Math.max(newOpen, newClose, candleData.high);\n                    let newLow = Math.min(candleData.low, newOpen, newClose);\n                    calculated = {\n                        close: newClose,\n                        open: newOpen,\n                        high: newHigh,\n                        low: newLow,\n                        volume: (candleData.volume || 0),\n                        timestamp: (candleData.timestamp || 0)\n                    };\n                    lastClose = newClose;\n                    lastOpen = newOpen;\n                    lastHigh = newHigh;\n                    lastLow = newLow;\n                }\n                candleData = yield calculated;\n            }\n        })();\n        this.generator.next();\n        input.low.forEach((tick, index) => {\n            var result = this.generator.next({\n                open: input.open[index],\n                high: input.high[index],\n                low: input.low[index],\n                close: input.close[index],\n                volume: input.volume ? input.volume[index] : input.volume,\n                timestamp: input.timestamp ? input.timestamp[index] : input.timestamp\n            });\n            if (result.value) {\n                this.result.open.push(result.value.open);\n                this.result.high.push(result.value.high);\n                this.result.low.push(result.value.low);\n                this.result.close.push(result.value.close);\n                this.result.volume.push(result.value.volume);\n                this.result.timestamp.push(result.value.timestamp);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nHeikinAshi.calculate = heikinashi;\nexport function heikinashi(input) {\n    Indicator.reverseInputs(input);\n    var result = new HeikinAshi(input).result;\n    if (input.reversedInput) {\n        result.open.reverse();\n        result.high.reverse();\n        result.low.reverse();\n        result.close.reverse();\n        result.volume.reverse();\n        result.timestamp.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=HeikinAshi.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class MorningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysLow > seconddaysLow) &&\n            (firstdaysLow > seconddaysHigh));\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && isSmallBodyExists && gapExists && isThirdBullish && doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningstar(data) {\n    return new MorningStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishEngulfing = ((firstdaysClose < firstdaysOpen) &&\n            (firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysOpen < seconddaysClose));\n        return (isBullishEngulfing);\n    }\n}\nexport function bullishengulfingpattern(data) {\n    return new BullishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BullishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = \"BullishHarami\";\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBullishHaramiPattern);\n    }\n}\nexport function bullishharami(data) {\n    return new BullishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BullishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BullishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiCrossPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBullishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bullishharamicross(data) {\n    return new BullishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BullishHaramiCross.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class Doji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Doji';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        return this.approximateEqual(daysOpen, daysClose);\n    }\n}\nexport function doji(data) {\n    return new Doji().hasPattern(data);\n}\n//# sourceMappingURL=Doji.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class MorningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && dojiExists && isThirdBullish && gapExists &&\n            doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningdojistar(data) {\n    return new MorningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DownsideTasukiGap extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 3;\n        this.name = 'DownsideTasukiGap';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isThirdBullish = thirddaysClose > thirddaysOpen;\n        let isFirstGapExists = seconddaysHigh < firstdaysLow;\n        let isDownsideTasukiGap = ((seconddaysOpen > thirddaysOpen) &&\n            (seconddaysClose < thirddaysOpen) &&\n            (thirddaysClose > seconddaysOpen) &&\n            (thirddaysClose < firstdaysClose));\n        return (isFirstBearish && isSecondBearish && isThirdBullish && isFirstGapExists && isDownsideTasukiGap);\n    }\n}\nexport function downsidetasukigap(data) {\n    return new DownsideTasukiGap().hasPattern(data);\n}\n//# sourceMappingURL=DownsideTasukiGap.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBullishMarbozu = this.approximateEqual(daysClose, daysHigh) &&\n            this.approximateEqual(daysLow, daysOpen) &&\n            daysOpen < daysClose &&\n            daysOpen < daysHigh;\n        return (isBullishMarbozu);\n    }\n}\nexport function bullishmarubozu(data) {\n    return new BullishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BullishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class PiercingLine extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'PiercingLine';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isDowntrend = seconddaysLow < firstdaysLow;\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBullish = seconddaysClose > seconddaysOpen;\n        let isPiercingLinePattern = ((firstdaysLow > seconddaysOpen) &&\n            (seconddaysClose > firstdaysMidpoint));\n        return (isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish);\n    }\n}\nexport function piercingline(data) {\n    return new PiercingLine().hasPattern(data);\n}\n//# sourceMappingURL=PiercingLine.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeWhiteSoldiers extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeWhiteSoldiers';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isUpTrend = seconddaysHigh > firstdaysHigh &&\n            thirddaysHigh > seconddaysHigh;\n        let isAllBullish = firstdaysOpen < firstdaysClose &&\n            seconddaysOpen < seconddaysClose &&\n            thirddaysOpen < thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysClose > seconddaysOpen &&\n            seconddaysOpen < firstdaysHigh &&\n            seconddaysHigh > thirddaysOpen &&\n            thirddaysOpen < seconddaysClose;\n        return (isUpTrend && isAllBullish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threewhitesoldiers(data) {\n    return new ThreeWhiteSoldiers().hasPattern(data);\n}\n//# sourceMappingURL=ThreeWhiteSoldiers.js.map","import MorningStar from './MorningStar';\nimport BullishEngulfingPattern from './BullishEngulfingPattern';\nimport BullishHarami from './BullishHarami';\nimport BullishHaramiCross from './BullishHaramiCross';\nimport MorningDojiStar from './MorningDojiStar';\nimport DownsideTasukiGap from './DownsideTasukiGap';\nimport BullishMarubozu from './BullishMarubozu';\nimport PiercingLine from './PiercingLine';\nimport ThreeWhiteSoldiers from './ThreeWhiteSoldiers';\nimport CandlestickFinder from './CandlestickFinder';\nlet bullishPatterns = [new BullishEngulfingPattern(), new DownsideTasukiGap(), new BullishHarami(), new BullishHaramiCross(),\n    new MorningDojiStar(), new MorningStar(), new BullishMarubozu(), new PiercingLine(), new ThreeWhiteSoldiers()];\nexport default class BullishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bullish Candlesticks';\n    }\n    hasPattern(data) {\n        return bullishPatterns.reduce(function (state, pattern) {\n            let result = pattern.hasPattern(data);\n            if (result) {\n                console.log('Matched pattern ', pattern.name);\n            }\n            return state || result;\n        }, false);\n    }\n}\nexport function bullish(data) {\n    return new BullishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bullish.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishEngulfing = ((firstdaysClose > firstdaysOpen) &&\n            (firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysOpen > seconddaysClose));\n        return (isBearishEngulfing);\n    }\n}\nexport function bearishengulfingpattern(data) {\n    return new BearishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BearishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHarami';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBearishHaramiPattern);\n    }\n}\nexport function bearishharami(data) {\n    return new BearishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BearishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiCrossPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBearishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bearishharamicross(data) {\n    return new BearishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BearishHaramiCross.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class EveningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && dojiExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningdojistar(data) {\n    return new EveningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class EveningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysHigh < seconddaysLow) &&\n            (firstdaysHigh < seconddaysHigh));\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && isSmallBodyExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningstar(data) {\n    return new EveningStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBearishMarbozu = this.approximateEqual(daysOpen, daysHigh) &&\n            this.approximateEqual(daysLow, daysClose) &&\n            daysOpen > daysClose &&\n            daysOpen > daysLow;\n        return (isBearishMarbozu);\n    }\n}\nexport function bearishmarubozu(data) {\n    return new BearishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BearishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeBlackCrows extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeBlackCrows';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isDownTrend = firstdaysLow > seconddaysLow &&\n            seconddaysLow > thirddaysLow;\n        let isAllBearish = firstdaysOpen > firstdaysClose &&\n            seconddaysOpen > seconddaysClose &&\n            thirddaysOpen > thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysOpen > seconddaysOpen &&\n            seconddaysOpen > firstdaysClose &&\n            seconddaysOpen > thirddaysOpen &&\n            thirddaysOpen > seconddaysClose;\n        return (isDownTrend && isAllBearish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threeblackcrows(data) {\n    return new ThreeBlackCrows().hasPattern(data);\n}\n//# sourceMappingURL=ThreeBlackCrows.js.map","import BearishEngulfingPattern from './BearishEngulfingPattern';\nimport BearishHarami from './BearishHarami';\nimport BearishHaramiCross from './BearishHaramiCross';\nimport EveningDojiStar from './EveningDojiStar';\nimport EveningStar from './EveningStar';\nimport BearishMarubozu from './BearishMarubozu';\nimport ThreeBlackCrows from './ThreeBlackCrows';\nimport CandlestickFinder from './CandlestickFinder';\nlet bearishPatterns = [new BearishEngulfingPattern(), new BearishHarami(), new BearishHaramiCross(), new EveningDojiStar(),\n    new EveningStar(), new BearishMarubozu(), new ThreeBlackCrows()];\nexport default class BearishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bearish Candlesticks';\n    }\n    hasPattern(data) {\n        return bearishPatterns.reduce(function (state, pattern) {\n            return state || pattern.hasPattern(data);\n        }, false);\n    }\n}\nexport function bearish(data) {\n    return new BearishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bearish.js.map","import CandlestickFinder from './CandlestickFinder';\nimport Doji from './Doji';\nexport default class AbandonedBaby extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'AbandonedBaby';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (thirddaysLow > seconddaysHigh) &&\n            (thirddaysClose > thirddaysOpen));\n        let isThirdBullish = (thirddaysHigh < firstdaysOpen);\n        return (isFirstBearish && dojiExists && gapExists && isThirdBullish);\n    }\n}\nexport function abandonedbaby(data) {\n    return new AbandonedBaby().hasPattern(data);\n}\n//# sourceMappingURL=AbandonedBaby.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DarkCloudCover extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'DarkCloudCover';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdayMidpoint = ((firstdaysClose + firstdaysOpen) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isDarkCloudPattern = ((seconddaysOpen > firstdaysHigh) &&\n            (seconddaysClose < firstdayMidpoint) &&\n            (seconddaysClose > firstdaysOpen));\n        return (isFirstBullish && isSecondBearish && isDarkCloudPattern);\n    }\n}\nexport function darkcloudcover(data) {\n    return new DarkCloudCover().hasPattern(data);\n}\n//# sourceMappingURL=DarkCloudCover.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DragonFlyDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'DragonFlyDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isHighEqualsOpen = this.approximateEqual(daysOpen, daysHigh);\n        return (isOpenEqualsClose && isHighEqualsOpen);\n    }\n}\nexport function dragonflydoji(data) {\n    return new DragonFlyDoji().hasPattern(data);\n}\n//# sourceMappingURL=DragonFlyDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class GraveStoneDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'GraveStoneDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysLow = data.low[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isLowEqualsOpen = this.approximateEqual(daysOpen, daysLow);\n        return (isOpenEqualsClose && isLowEqualsOpen);\n    }\n}\nexport function gravestonedoji(data) {\n    return new GraveStoneDoji().hasPattern(data);\n}\n//# sourceMappingURL=GraveStoneDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysClose);\n        let lowerShadowLength = Math.abs(daysOpen - daysLow);\n        let isBullishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBullishSpinningTop;\n    }\n}\nexport function bullishspinningtop(data) {\n    return new BullishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BullishSpinningTop.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysOpen);\n        let lowerShadowLength = Math.abs(daysHigh - daysLow);\n        let isBearishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBearishSpinningTop;\n    }\n}\nexport function bearishspinningtop(data) {\n    return new BearishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BearishSpinningTop.js.map","/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\n/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */ export function fibonacciretracement(start, end) {\n    let levels = [0, 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6];\n    let retracements;\n    if (start < end) {\n        retracements = levels.map(function (level) {\n            let calculated = end - Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    else {\n        retracements = levels.map(function (level) {\n            let calculated = end + Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    return retracements;\n}\n//# sourceMappingURL=fibonacci.js.map","export * from './lib/index.js';\nexport function getAvailableIndicators () {\n  let AvailableIndicators   = []\n  AvailableIndicators.push('sma');\n  AvailableIndicators.push('ema');\n  AvailableIndicators.push('wma');\n  AvailableIndicators.push('wema');\n  AvailableIndicators.push('macd');\n  AvailableIndicators.push('rsi');\n  AvailableIndicators.push('bollingerbands');\n  AvailableIndicators.push('adx');\n  AvailableIndicators.push('atr');\n  AvailableIndicators.push('truerange');\n  AvailableIndicators.push('roc');\n  AvailableIndicators.push('kst');\n  AvailableIndicators.push('stochastic');\n  AvailableIndicators.push('williamsr');\n  AvailableIndicators.push('adl');\n  AvailableIndicators.push('obv');\n  AvailableIndicators.push('trix');\n  \n  AvailableIndicators.push('cci');\n  AvailableIndicators.push('forceindex');\n  AvailableIndicators.push('vwap');\n  AvailableIndicators.push('renko');\n  AvailableIndicators.push('heikinashi');\n\n  AvailableIndicators.push('averagegain');\n  AvailableIndicators.push('averageloss');\n  AvailableIndicators.push('sd');\n  AvailableIndicators.push('bullish');\n  AvailableIndicators.push('bearish');\n  AvailableIndicators.push('abandonedbaby');\n  AvailableIndicators.push('doji');\n  AvailableIndicators.push('bearishengulfingpattern');\n  AvailableIndicators.push('bullishengulfingpattern');\n  AvailableIndicators.push('darkcloudcover');\n  AvailableIndicators.push('downsidetasukigap');\n  AvailableIndicators.push('dragonflydoji');\n  AvailableIndicators.push('gravestonedoji');\n  AvailableIndicators.push('bullishharami');\n  AvailableIndicators.push('bearishharami');\n  AvailableIndicators.push('bullishharamicross');\n  AvailableIndicators.push('bearishharamicross');\n  AvailableIndicators.push('eveningdojistar');\n  AvailableIndicators.push('eveningstar');\n  AvailableIndicators.push('morningdojistar');\n  AvailableIndicators.push('morningstar');\n  AvailableIndicators.push('bullishmarubozu');\n  AvailableIndicators.push('bearishmarubozu');\n  AvailableIndicators.push('piercingline');\n  AvailableIndicators.push('bullishspinningtop');\n  AvailableIndicators.push('bearishspinningtop');\n  AvailableIndicators.push('threeblackcrows');\n  AvailableIndicators.push('threewhitesoldiers');\n  return AvailableIndicators;\n};\n","import { format as nf } from '../Utils/NumberFormatter';\nexport class IndicatorInput {\n}\nexport class AllInputs {\n}\nexport class Indicator {\n    constructor(input) {\n        this.format = input.format || nf;\n    }\n    static reverseInputs(input) {\n        if (input.reversedInput) {\n            input.values ? input.values.reverse() : undefined;\n            input.open ? input.open.reverse() : undefined;\n            input.high ? input.high.reverse() : undefined;\n            input.low ? input.low.reverse() : undefined;\n            input.close ? input.close.reverse() : undefined;\n            input.volume ? input.volume.reverse() : undefined;\n            input.timestamp ? input.timestamp.reverse() : undefined;\n        }\n    }\n    getResult() {\n        return this.result;\n    }\n}\n//# sourceMappingURL=indicator.js.map","class Item {\n    constructor(data, prev, next) {\n        this.next = next;\n        if (next)\n            next.prev = this;\n        this.prev = prev;\n        if (prev)\n            prev.next = this;\n        this.data = data;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this._length = 0;\n    }\n    get head() {\n        return this._head && this._head.data;\n    }\n    get tail() {\n        return this._tail && this._tail.data;\n    }\n    get current() {\n        return this._current && this._current.data;\n    }\n    get length() {\n        return this._length;\n    }\n    push(data) {\n        this._tail = new Item(data, this._tail);\n        if (this._length === 0) {\n            this._head = this._tail;\n            this._current = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    pop() {\n        var tail = this._tail;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return tail.data;\n        }\n        this._tail = tail.prev;\n        this._tail.next = undefined;\n        if (this._current === tail) {\n            this._current = this._tail;\n            this._next = undefined;\n        }\n        return tail.data;\n    }\n    shift() {\n        var head = this._head;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return head.data;\n        }\n        this._head = this._head.next;\n        if (this._current === head) {\n            this._current = this._head;\n            this._next = this._current.next;\n        }\n        return head.data;\n    }\n    unshift(data) {\n        this._head = new Item(data, undefined, this._head);\n        if (this._length === 0) {\n            this._tail = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    unshiftCurrent() {\n        var current = this._current;\n        if (current === this._head || this._length < 2) {\n            return current && current.data;\n        }\n        // remove\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        // unshift\n        current.next = this._head;\n        current.prev = undefined;\n        this._head.prev = current;\n        this._head = current;\n        return current.data;\n    }\n    removeCurrent() {\n        var current = this._current;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return current.data;\n        }\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else if (current === this._head) {\n            this._head = current.next;\n            this._head.prev = undefined;\n            this._current = this._head;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        return current.data;\n    }\n    resetCursor() {\n        this._current = this._next = this._head;\n        return this;\n    }\n    next() {\n        var next = this._next;\n        if (next !== undefined) {\n            this._next = next.next;\n            this._current = next;\n            return next.data;\n        }\n    }\n}\n//# sourceMappingURL=LinkedList.js.map","/**\n * Created by AAravindan on 5/7/16.\n */\nimport { LinkedList } from './LinkedList';\nexport default class FixedSizeLinkedList extends LinkedList {\n    constructor(size, maintainHigh, maintainLow) {\n        super();\n        this.size = size;\n        this.maintainHigh = maintainHigh;\n        this.maintainLow = maintainLow;\n        this.periodHigh = 0;\n        this.periodLow = Infinity;\n        if (!size || typeof size !== 'number') {\n            throw ('Size required and should be a number.');\n        }\n        this._push = this.push;\n        this.push = function (data) {\n            this.add(data);\n        };\n    }\n    add(data) {\n        if (this.length === this.size) {\n            this.lastShift = this.shift();\n            this._push(data);\n            //TODO: FInd a better way\n            if (this.maintainHigh)\n                if (this.lastShift == this.periodHigh)\n                    this.calculatePeriodHigh();\n            if (this.maintainLow)\n                if (this.lastShift == this.periodLow)\n                    this.calculatePeriodLow();\n        }\n        else {\n            this._push(data);\n        }\n        //TODO: FInd a better way\n        if (this.maintainHigh)\n            if (this.periodHigh <= data)\n                (this.periodHigh = data);\n        if (this.maintainLow)\n            if (this.periodLow >= data)\n                (this.periodLow = data);\n    }\n    *iterator() {\n        this.resetCursor();\n        while (this.next()) {\n            yield this.current;\n        }\n    }\n    calculatePeriodHigh() {\n        this.resetCursor();\n        if (this.next())\n            this.periodHigh = this.current;\n        while (this.next()) {\n            if (this.periodHigh <= this.current) {\n                this.periodHigh = this.current;\n            }\n            ;\n        }\n        ;\n    }\n    calculatePeriodLow() {\n        this.resetCursor();\n        if (this.next())\n            this.periodLow = this.current;\n        while (this.next()) {\n            if (this.periodLow >= this.current) {\n                this.periodLow = this.current;\n            }\n            ;\n        }\n        ;\n    }\n}\n//# sourceMappingURL=FixedSizeLinkedList.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class MDMInput extends IndicatorInput {\n}\n;\nexport class MDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var minusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    minusDm = format((downMove > upMove && downMove > 0) ? downMove : 0);\n                }\n                last = current;\n                current = yield minusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new MDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=MinusDM.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\nexport class PDMInput extends IndicatorInput {\n}\n;\nexport class PDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var plusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    plusDm = format((upMove > downMove && upMove > 0) ? upMove : 0);\n                }\n                last = current;\n                current = yield plusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new PDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=PlusDM.js.map","export default class StockData {\n    constructor(open, high, low, close, reversedInput) {\n        this.open = open;\n        this.high = high;\n        this.low = low;\n        this.close = close;\n        this.reversedInput = reversedInput;\n    }\n}\nexport class CandleData {\n}\nexport class CandleList {\n    constructor() {\n        this.open = [];\n        this.high = [];\n        this.low = [];\n        this.close = [];\n        this.volume = [];\n        this.timestamp = [];\n    }\n}\n//# sourceMappingURL=StockData.js.map","export default class CandlestickFinder {\n    constructor() {\n        // if (new.target === Abstract) {\n        //     throw new TypeError(\"Abstract class\");\n        // }\n    }\n    approximateEqual(a, b) {\n        let left = parseFloat(Math.abs(a - b).toPrecision(4)) * 1;\n        let right = parseFloat((a * 0.001).toPrecision(4)) * 1;\n        return left <= right;\n    }\n    logic(data) {\n        throw \"this has to be implemented\";\n    }\n    getAllPatternIndex(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return [];\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return this._generateDataForCandleStick(data)\n            .map((current, index) => {\n            return strategyFn.call(this, current) ? index : undefined;\n        }).filter((hasIndex) => {\n            return hasIndex;\n        });\n    }\n    hasPattern(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return false;\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return strategyFn.call(this, this._getLastDataForCandleStick(data));\n    }\n    _getLastDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        if (data.close.length === requiredCount) {\n            return data;\n        }\n        else {\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            let i = 0;\n            let index = data.close.length - requiredCount;\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }\n    }\n    _generateDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        let generatedData = data.close.map(function (currentData, index) {\n            let i = 0;\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }).filter((val, index) => { return (index <= (data.close.length - requiredCount)); });\n        return generatedData;\n    }\n}\n//# sourceMappingURL=CandlestickFinder.js.map"],"names":["setConfig","key","value","getConfig","config","format","v","precision","parseFloat","toPrecision","sma","input","reverseInputs","result","SMA","reversedInput","reverse","ema","EMA","wma","WMA","wema","WEMA","macd","MACD","averagegain","AverageGain","averageloss","AverageLoss","rsi","RSI","sd","SD","bollingerbands","BollingerBands","wildersmoothing","WilderSmoothing","truerange","TrueRange","adx","ADX","atr","ATR","roc","ROC","kst","KST","stochastic","Stochastic","williamsr","WilliamsR","adl","ADL","obv","OBV","trix","TRIX","forceindex","ForceIndex","cci","CCI","vwap","VWAP","renko","Renko","open","high","low","close","volume","timestamp","heikinashi","HeikinAshi","morningstar","data","MorningStar","hasPattern","bullishengulfingpattern","BullishEngulfingPattern","bullishharami","BullishHarami","bullishharamicross","BullishHaramiCross","doji","Doji","morningdojistar","MorningDojiStar","downsidetasukigap","DownsideTasukiGap","bullishmarubozu","BullishMarubozu","piercingline","PiercingLine","threewhitesoldiers","ThreeWhiteSoldiers","bullish","BullishPatterns","bearishengulfingpattern","BearishEngulfingPattern","bearishharami","BearishHarami","bearishharamicross","BearishHaramiCross","eveningdojistar","EveningDojiStar","eveningstar","EveningStar","bearishmarubozu","BearishMarubozu","threeblackcrows","ThreeBlackCrows","bearish","BearishPatterns","abandonedbaby","AbandonedBaby","darkcloudcover","DarkCloudCover","dragonflydoji","DragonFlyDoji","gravestonedoji","GraveStoneDoji","bullishspinningtop","BullishSpinningTop","bearishspinningtop","BearishSpinningTop","fibonacciretracement","start","end","levels","map","level","calculated","Math","abs","getAvailableIndicators","AvailableIndicators","push","IndicatorInput","Indicator","nf","this","values","Item","prev","next","LinkedList","_length","_tail","_head","_current","_next","tail","undefined","head","current","period","price","genFn","counter","sum","list","shift","generator","_this2","forEach","tick","calculate","priceArray","exponent","prevEma","nextValue","_this","regeneratorRuntime","length","resetCursor","i","denominator","index","SimpleMAOscillator","SimpleMASignal","oscillatorMAtype","signalMAtype","fastMAProducer","fastPeriod","slowMAProducer","slowPeriod","signalMAProducer","signalPeriod","fast","slow","signal","isNaN","histogram","lastValue","currentValue","gain","avgGain","gainSum","loss","avgLoss","lossSum","GainProvider","LossProvider","lastAvgGain","lastAvgLoss","RS","toFixed","currentRSI","FixedSizeLinkedList","size","maintainHigh","maintainLow","periodHigh","periodLow","Infinity","_push","add","lastShift","calculatePeriodHigh","calculatePeriodLow","currentSet","iterator","pow","x","mean","sqrt","nextResult","stdDev","_this3","calcSMA","calcsd","lower","upper","middle","pb","MDM","lows","highs","last","downMove","upMove","minusDm","PDM","plusDm","closes","previousClose","max","plusDM","minusDM","emaPDM","emaMDM","emaTR","emaDX","tr","calcTr","calcPDM","calcMDM","lastATR","lastAPDM","lastAMDM","lastPDI","lastMDI","diDiff","diSum","lastDX","smoothedDX","pdi","mdi","trueRange","trange","avgTrueRange","pastPeriods","rocPer1","ROCPer1","rocPer2","ROCPer2","rocPer3","ROCPer3","rocPer4","ROCPer4","smaPer1","SMAROCPer1","smaPer2","SMAROCPer2","smaPer3","SMAROCPer3","smaPer4","SMAROCPer4","roc1","roc2","roc3","roc4","sma1","sma2","sma3","sma4","signalSMA","firstResult","RCMA2","RCMA3","RCMA4","roc1Result","roc2Result","roc3Result","roc4Result","RCMA1","d","pastLowPeriods","pastHighPeriods","dSma","k","williamsR","volumes","moneyFlowMultiplier","moneyFlowVolume","round","tickHigh","tickInput","lastClose","emaOfema","emaOfemaOfema","trixROC","initialema","smoothedResult","doubleSmoothedResult","arguments","emaForceIndex","previousTick","forceIndex","currentTpSet","tpSMACalculator","tp","smaTp","meanDeviation","typicalPrice","total","cumulativeTotal","cumulativeVolume","CandleList","useATR","brickSize","atrResult","Object","assign","error","lastOpen","lastHigh","lastLow","lastVolume","lastTimestamp","candleData","absoluteMovementFromClose","absoluteMovementFromOpen","reference","Low","newOpen","newClose","min","newHigh","newLow","CandlestickFinder","a","b","requiredCount","warn","name","strategyFn","logic","_generateDataForCandleStick","call","filter","hasIndex","_getLastDataForCandleStick","returnVal","currentData","val","firstdaysOpen","firstdaysClose","firstdaysLow","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","firstdaysMidpoint","isFirstBearish","isSmallBodyExists","isThirdBullish","gapExists","doesCloseAboveFirstMidpoint","seconddaysOpen","firstdaysHigh","isBullishHaramiCrossPattern","isSecondDayDoji","approximateEqual","daysOpen","daysClose","dojiExists","isSecondBearish","isFirstGapExists","isDownsideTasukiGap","daysHigh","daysLow","isDowntrend","isSecondBullish","isPiercingLinePattern","thirddaysHigh","isUpTrend","isAllBullish","doesOpenWithinPreviousBody","bullishPatterns","reduce","state","pattern","log","isBearishHaramiCrossPattern","isFirstBullish","isThirdBearish","doesCloseBelowFirstMidpoint","thirddaysLow","isDownTrend","isAllBearish","bearishPatterns","firstdayMidpoint","isDarkCloudPattern","isOpenEqualsClose","isHighEqualsOpen","isLowEqualsOpen","bodyLength","upperShadowLength","lowerShadowLength"],"mappings":"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"}