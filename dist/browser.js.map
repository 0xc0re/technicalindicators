{"version":3,"file":"browser.js","sources":["../lib/Utils/NumberFormatter.js","../lib/moving_averages/SMA.js","../lib/moving_averages/EMA.js","../lib/moving_averages/WMA.js","../lib/moving_averages/WEMA.js","../lib/moving_averages/MACD.js","../lib/Utils/AverageGain.js","../lib/Utils/AverageLoss.js","../lib/oscillators/RSI.js","../lib/Utils/SD.js","../lib/volatility/BollingerBands.js","../lib/directionalmovement/TrueRange.js","../lib/directionalmovement/ADX.js","../lib/directionalmovement/ATR.js","../lib/momentum/ROC.js","../lib/momentum/KST.js","../lib/momentum/Stochastic.js","../lib/momentum/WilliamsR.js","../lib/volume/ADL.js","../lib/volume/OBV.js","../lib/momentum/TRIX.js","../lib/candlestick/MorningStar.js","../lib/candlestick/BullishEngulfingPattern.js","../lib/candlestick/BullishHarami.js","../lib/candlestick/BullishHaramiCross.js","../lib/candlestick/Doji.js","../lib/candlestick/MorningDojiStar.js","../lib/candlestick/DownsideTasukiGap.js","../lib/candlestick/BullishMarubozu.js","../lib/candlestick/PiercingLine.js","../lib/candlestick/ThreeWhiteSoldiers.js","../lib/candlestick/Bullish.js","../lib/candlestick/BearishEngulfingPattern.js","../lib/candlestick/BearishHarami.js","../lib/candlestick/BearishHaramiCross.js","../lib/candlestick/EveningDojiStar.js","../lib/candlestick/EveningStar.js","../lib/candlestick/BearishMarubozu.js","../lib/candlestick/ThreeBlackCrows.js","../lib/candlestick/Bearish.js","../lib/candlestick/AbandonedBaby.js","../lib/candlestick/DarkCloudCover.js","../lib/candlestick/DragonFlyDoji.js","../lib/candlestick/GraveStoneDoji.js","../lib/candlestick/BullishSpinningTop.js","../lib/candlestick/BearishSpinningTop.js","../lib/drawingtools/fibonacci.js","../index.js","../lib/indicator/indicator.js","../lib/Utils/LinkedList.js","../lib/Utils/FixedSizeLinkedList.js","../lib/directionalmovement/MinusDM.js","../lib/directionalmovement/PlusDM.js","../lib/candlestick/CandlestickFinder.js"],"sourcesContent":["export function format(v) {\n    return parseFloat(v.toFixed(5));\n}\n//# sourceMappingURL=NumberFormatter.js.map","//STEP 1. Import Necessary indicator or rather last step\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\n//STEP 2. Create the input for the indicator, mandatory should be in the constructor\nexport class MAInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n    }\n}\n//STEP3. Add class based syntax with export\nexport class SMA extends Indicator {\n    constructor(input) {\n        super(input);\n        this.period = input.period;\n        this.price = input.values;\n        var genFn = (function* (period) {\n            var list = new LinkedList();\n            var sum = 0;\n            var counter = 1;\n            var current = yield;\n            var result;\n            list.push(0);\n            while (true) {\n                if (counter < period) {\n                    counter++;\n                    list.push(current);\n                    sum = sum + current;\n                }\n                else {\n                    sum = sum - list.shift() + current;\n                    result = ((sum) / period);\n                    list.push(current);\n                }\n                current = yield result;\n            }\n        });\n        this.generator = genFn(this.period);\n        this.generator.next();\n        this.result = [];\n        this.price.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nSMA.calculate = sma;\nexport function sma(input) {\n    Indicator.reverseInputs(input);\n    var result = new SMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//STEP 6. Run the tests \n//# sourceMappingURL=SMA.js.map","import { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class EMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var exponent = (2 / (period + 1));\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [] });\n        var genFn = (function* () {\n            var tick = yield;\n            var prevEma;\n            while (true) {\n                if (prevEma && tick) {\n                    prevEma = ((tick - prevEma) * exponent) + prevEma;\n                    tick = yield prevEma;\n                }\n                else {\n                    tick = yield;\n                    prevEma = sma.nextValue(tick);\n                    if (prevEma)\n                        tick = yield prevEma;\n                }\n            }\n        });\n        this.generator = genFn();\n        this.generator.next();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nEMA.calculate = ema;\nexport function ema(input) {\n    Indicator.reverseInputs(input);\n    var result = new EMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=EMA.js.map","\"use strict\";\nimport { Indicator } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\nexport class WMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let data = new LinkedList();\n            let denominator = period * (period + 1) / 2;\n            while (true) {\n                if ((data.length) < period) {\n                    data.push(yield);\n                }\n                else {\n                    data.resetCursor();\n                    let result = 0;\n                    for (let i = 1; i <= period; i++) {\n                        result = result + (data.next() * i / (denominator));\n                    }\n                    var next = yield result;\n                    data.shift();\n                    data.push(next);\n                }\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick, index) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    //STEP 5. REMOVE GET RESULT FUNCTION\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nWMA.calculate = wma;\n;\nexport function wma(input) {\n    Indicator.reverseInputs(input);\n    var result = new WMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WMA.js.map","\"use strict\";\n//TODO; THis is copied from EMA for checking if WEMA works correctly, we need to refactor if this works good.\nimport { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class WEMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        this.generator = (function* () {\n            var tick = yield;\n            var prevMa, currentMa;\n            while (true) {\n                if (prevMa === undefined) {\n                    currentMa = sma.nextValue(tick);\n                }\n                else {\n                    currentMa = ((prevMa * (period - 1)) + tick) / period;\n                }\n                prevMa = currentMa;\n                tick = yield currentMa;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nWEMA.calculate = wema;\n;\nexport function wema(input) {\n    Indicator.reverseInputs(input);\n    var result = new WEMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WEMA.js.map","/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from './SMA';\nimport { EMA } from './EMA';\nexport class MACDInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n        this.SimpleMAOscillator = true;\n        this.SimpleMASignal = true;\n    }\n}\nexport class MACDOutput {\n}\nexport class MACD extends Indicator {\n    constructor(input) {\n        super(input);\n        var oscillatorMAtype = input.SimpleMAOscillator ? SMA : EMA;\n        var signalMAtype = input.SimpleMASignal ? SMA : EMA;\n        var fastMAProducer = new oscillatorMAtype({ period: input.fastPeriod, values: [], format: (v) => { return v; } });\n        var slowMAProducer = new oscillatorMAtype({ period: input.slowPeriod, values: [], format: (v) => { return v; } });\n        var signalMAProducer = new signalMAtype({ period: input.signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        this.generator = (function* () {\n            var index = 0;\n            var tick;\n            var MACD, signal, histogram, fast, slow;\n            while (true) {\n                if (index < input.slowPeriod) {\n                    tick = yield;\n                    fast = fastMAProducer.nextValue(tick);\n                    slow = slowMAProducer.nextValue(tick);\n                    index++;\n                    continue;\n                }\n                if (fast && slow) {\n                    MACD = fast - slow;\n                    signal = signalMAProducer.nextValue(MACD);\n                }\n                histogram = MACD - signal;\n                tick = yield ({\n                    //fast : fast,\n                    //slow : slow,\n                    MACD: format(MACD),\n                    signal: signal ? format(signal) : undefined,\n                    histogram: isNaN(histogram) ? undefined : format(histogram)\n                });\n                fast = fastMAProducer.nextValue(tick);\n                slow = slowMAProducer.nextValue(tick);\n            }\n        })();\n        this.generator.next();\n        input.values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nMACD.calculate = macd;\nexport function macd(input) {\n    Indicator.reverseInputs(input);\n    var result = new MACD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=MACD.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgGainInput extends IndicatorInput {\n}\nexport class AverageGain extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var gainSum = 0;\n            var avgGain;\n            var gain;\n            var lastValue;\n            while (true) {\n                gain = lastValue ? (currentValue - lastValue) : 0;\n                gain = gain ? gain : 0;\n                if (gain > 0) {\n                    gainSum = gainSum + gain;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgGain) {\n                    avgGain = gainSum / period;\n                }\n                else {\n                    avgGain = ((avgGain * (period - 1)) + (gain > 0 ? gain : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgGain = avgGain ? format(avgGain) : undefined;\n                currentValue = yield avgGain;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageGain.calculate = averagegain;\nexport function averagegain(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageGain(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageGain.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgLossInput extends IndicatorInput {\n}\nexport class AverageLoss extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var lossSum = 0;\n            var avgLoss;\n            var loss;\n            var lastValue;\n            while (true) {\n                loss = lastValue ? (lastValue - currentValue) : 0;\n                loss = loss ? loss : 0;\n                if (loss > 0) {\n                    lossSum = lossSum + loss;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgLoss) {\n                    avgLoss = lossSum / period;\n                }\n                else {\n                    avgLoss = ((avgLoss * (period - 1)) + (loss > 0 ? loss : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgLoss = avgLoss ? format(avgLoss) : undefined;\n                currentValue = yield avgLoss;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageLoss.calculate = averageloss;\nexport function averageloss(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageLoss(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageLoss.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/5/16.\n */\nimport { AverageGain } from '../Utils/AverageGain';\nimport { AverageLoss } from '../Utils/AverageLoss';\nexport class RSIInput extends IndicatorInput {\n}\nexport class RSI extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var values = input.values;\n        var GainProvider = new AverageGain({ period: period, values: [] });\n        var LossProvider = new AverageLoss({ period: period, values: [] });\n        this.generator = (function* (period) {\n            var current = yield;\n            var lastAvgGain, lastAvgLoss, RS, currentRSI;\n            while (true) {\n                lastAvgGain = GainProvider.nextValue(current);\n                lastAvgLoss = LossProvider.nextValue(current);\n                if (lastAvgGain && lastAvgLoss) {\n                    if (lastAvgLoss === 0) {\n                        currentRSI = 100;\n                    }\n                    else {\n                        RS = lastAvgGain / lastAvgLoss;\n                        currentRSI = parseFloat((100 - (100 / (1 + RS))).toFixed(2));\n                    }\n                }\n                current = yield currentRSI;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nRSI.calculate = rsi;\nexport function rsi(input) {\n    Indicator.reverseInputs(input);\n    var result = new RSI(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=RSI.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\n/**\n * Created by AAravindan on 5/7/16.\n */\n\"use strict\";\nexport class SDInput extends IndicatorInput {\n}\n;\nexport class SD extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick;\n            var mean;\n            var currentSet = new LinkedList(period);\n            ;\n            tick = yield;\n            var sd;\n            while (true) {\n                currentSet.push(tick);\n                mean = sma.nextValue(tick);\n                if (mean) {\n                    let sum = 0;\n                    for (let x of currentSet.iterator()) {\n                        sum = sum + (Math.pow((x - mean), 2));\n                    }\n                    sd = Math.sqrt(sum / (period));\n                }\n                tick = yield sd;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nSD.calculate = sd;\nexport function sd(input) {\n    Indicator.reverseInputs(input);\n    var result = new SD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=SD.js.map","\"use strict\";\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { SD } from '../Utils/SD';\nexport class BollingerBandsInput extends IndicatorInput {\n}\n;\nexport class BollingerBandsOutput extends IndicatorInput {\n}\n;\nexport class BollingerBands extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var stdDev = input.stdDev;\n        var format = this.format;\n        var sma, sd;\n        this.result = [];\n        sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        sd = new SD({ period: period, values: [], format: (v) => { return v; } });\n        this.generator = (function* () {\n            var result;\n            var tick;\n            var calcSMA;\n            var calcsd;\n            tick = yield;\n            while (true) {\n                calcSMA = sma.nextValue(tick);\n                calcsd = sd.nextValue(tick);\n                if (calcSMA) {\n                    let middle = format(calcSMA);\n                    let upper = format(calcSMA + (calcsd * stdDev));\n                    let lower = format(calcSMA - (calcsd * stdDev));\n                    let pb = format((tick - lower) / (upper - lower));\n                    result = {\n                        middle: middle,\n                        upper: upper,\n                        lower: lower,\n                        pb: pb\n                    };\n                }\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nBollingerBands.calculate = bollingerbands;\nexport function bollingerbands(input) {\n    Indicator.reverseInputs(input);\n    var result = new BollingerBands(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=BollingerBands.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class TrueRangeInput extends IndicatorInput {\n}\n;\nexport class TrueRange extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var current = yield;\n            var previousClose, result;\n            while (true) {\n                result = Math.max(current.high - current.low, isNaN(Math.abs(current.high - previousClose)) ? 0 : Math.abs(current.high - previousClose), isNaN(Math.abs(current.low - previousClose)) ? 0 : Math.abs(current.low - previousClose));\n                previousClose = current.close;\n                if (result) {\n                    result = format(result);\n                }\n                current = yield result;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nTrueRange.calculate = truerange;\nexport function truerange(input) {\n    Indicator.reverseInputs(input);\n    var result = new TrueRange(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TrueRange.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { MDM } from './MinusDM';\nimport { PDM } from './PlusDM';\nimport { TrueRange } from './TrueRange';\nimport { SMA } from '../moving_averages/SMA';\nimport { WEMA } from '../moving_averages/WEMA';\nexport class ADXInput extends IndicatorInput {\n}\n;\nexport class ADX extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        var plusDM = new PDM({\n            high: [],\n            low: []\n        });\n        var minusDM = new MDM({\n            high: [],\n            low: []\n        });\n        var emaPDM = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        var emaMDM = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        var emaTR = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        var smaDX = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        var tr = new TrueRange({\n            low: [],\n            high: [],\n            close: [],\n        });\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var index = 0;\n            var lastATR, lastAPDM, lastAMDM, lastPDI, lastMDI, lastDX, smoothedDX;\n            lastATR = 0;\n            lastAPDM = 0;\n            lastAMDM = 0;\n            while (true) {\n                let calcTr = tr.nextValue(tick);\n                let calcPDM = plusDM.nextValue(tick);\n                calcPDM = calcPDM ? calcPDM : 0;\n                let calcMDM = minusDM.nextValue(tick);\n                calcMDM = calcMDM ? calcMDM : 0;\n                if (calcTr !== undefined) {\n                    if (index < period) {\n                        lastATR = lastATR + calcTr;\n                        lastAPDM = lastAPDM + calcPDM;\n                        lastAMDM = lastAMDM + calcMDM;\n                        index++;\n                        tick = yield;\n                        continue;\n                    }\n                    else if (index === period) {\n                        lastPDI = (lastAPDM) * 100 / lastATR;\n                        lastMDI = (lastAMDM) * 100 / lastATR;\n                        index++;\n                    }\n                    else {\n                        lastATR = (lastATR - (lastATR / period)) + calcTr;\n                        lastAPDM = (lastAPDM - (lastAPDM / period)) + calcPDM;\n                        lastAMDM = (lastAMDM - (lastAMDM / period)) + calcMDM;\n                        lastPDI = (lastAPDM) * 100 / lastATR;\n                        lastMDI = (lastAMDM) * 100 / lastATR;\n                    }\n                    lastDX = (Math.abs(lastPDI - lastMDI) / (lastPDI + lastMDI)) * 100;\n                    if (!smoothedDX) {\n                        smoothedDX = smaDX.nextValue(lastDX);\n                    }\n                    else {\n                        smoothedDX = ((smoothedDX * (period - 1)) + lastDX) / period;\n                    }\n                }\n                tick = yield smoothedDX;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result) {\n            return this.format(result);\n        }\n    }\n    ;\n}\nADX.calculate = adx;\nexport function adx(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADX.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nimport { WEMA } from '../moving_averages/WEMA';\nimport { TrueRange } from './TrueRange';\nexport class ATRInput extends IndicatorInput {\n}\n;\nexport class ATR extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        var trueRange = new TrueRange({\n            low: [],\n            high: [],\n            close: []\n        });\n        var wema = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var avgTrueRange, trange;\n            ;\n            while (true) {\n                trange = trueRange.nextValue({\n                    low: tick.low,\n                    high: tick.high,\n                    close: tick.close\n                });\n                if (trange === undefined) {\n                    avgTrueRange = undefined;\n                }\n                else {\n                    avgTrueRange = wema.nextValue(trange);\n                }\n                tick = yield avgTrueRange;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nATR.calculate = atr;\nexport function atr(input) {\n    Indicator.reverseInputs(input);\n    var result = new ATR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ATR.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ROCInput extends IndicatorInput {\n}\nexport class ROC extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let index = 1;\n            var pastPeriods = new LinkedList(period);\n            ;\n            var tick = yield;\n            var roc;\n            while (true) {\n                pastPeriods.push(tick);\n                if (index < period) {\n                    index++;\n                }\n                else {\n                    roc = ((tick - pastPeriods.lastShift) / (pastPeriods.lastShift)) * 100;\n                }\n                tick = yield roc;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nROC.calculate = roc;\n;\nexport function roc(input) {\n    Indicator.reverseInputs(input);\n    var result = new ROC(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ROC.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { ROC } from './ROC';\nexport class KSTInput extends IndicatorInput {\n}\nexport class KSTOutput {\n}\nexport class KST extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let rocPer1 = input.ROCPer1;\n        let rocPer2 = input.ROCPer2;\n        let rocPer3 = input.ROCPer3;\n        let rocPer4 = input.ROCPer4;\n        let smaPer1 = input.SMAROCPer1;\n        let smaPer2 = input.SMAROCPer2;\n        let smaPer3 = input.SMAROCPer3;\n        let smaPer4 = input.SMAROCPer4;\n        let signalPeriod = input.signalPeriod;\n        let roc1 = new ROC({ period: rocPer1, values: [] });\n        let roc2 = new ROC({ period: rocPer2, values: [] });\n        let roc3 = new ROC({ period: rocPer3, values: [] });\n        let roc4 = new ROC({ period: rocPer4, values: [] });\n        let sma1 = new SMA({ period: smaPer1, values: [], format: (v) => { return v; } });\n        let sma2 = new SMA({ period: smaPer2, values: [], format: (v) => { return v; } });\n        let sma3 = new SMA({ period: smaPer3, values: [], format: (v) => { return v; } });\n        let sma4 = new SMA({ period: smaPer4, values: [], format: (v) => { return v; } });\n        let signalSMA = new SMA({ period: signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        let firstResult = Math.max(rocPer1 + smaPer1, rocPer2 + smaPer2, rocPer3 + smaPer3, rocPer4 + smaPer4);\n        this.generator = (function* () {\n            let index = 1;\n            let tick = yield;\n            let kst;\n            let RCMA1, RCMA2, RCMA3, RCMA4, signal, result;\n            while (true) {\n                let roc1Result = roc1.nextValue(tick);\n                let roc2Result = roc2.nextValue(tick);\n                let roc3Result = roc3.nextValue(tick);\n                let roc4Result = roc4.nextValue(tick);\n                RCMA1 = (roc1Result !== undefined) ? sma1.nextValue(roc1Result) : undefined;\n                RCMA2 = (roc2Result !== undefined) ? sma2.nextValue(roc2Result) : undefined;\n                RCMA3 = (roc3Result !== undefined) ? sma3.nextValue(roc3Result) : undefined;\n                RCMA4 = (roc4Result !== undefined) ? sma4.nextValue(roc4Result) : undefined;\n                if (index < firstResult) {\n                    index++;\n                }\n                else {\n                    kst = (RCMA1 * 1) + (RCMA2 * 2) + (RCMA3 * 3) + (RCMA4 * 4);\n                }\n                signal = (kst !== undefined) ? signalSMA.nextValue(kst) : undefined;\n                result = kst !== undefined ? {\n                    kst: format(kst),\n                    signal: signal ? format(signal) : undefined\n                } : undefined;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nKST.calculate = kst;\nexport function kst(input) {\n    Indicator.reverseInputs(input);\n    var result = new KST(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=KST.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/10/16.\n */\n\"use strict\";\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nimport { SMA } from '../moving_averages/SMA';\nexport class StochasticInput extends IndicatorInput {\n}\n;\nexport class StochasticOutput {\n}\n;\nexport class Stochastic extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let signalPeriod = input.signalPeriod;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%K = (Current Close - Lowest Low)/(Highest High - Lowest Low) * 100\n        //%D = 3-day SMA of %K\n        //\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%K is multiplied by 100 to move the decimal point two places\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let dSma = new SMA({\n                period: signalPeriod,\n                values: [],\n                format: (v) => { return v; }\n            });\n            let k, d;\n            var tick = yield;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                let periodLow = pastLowPeriods.periodLow;\n                k = (tick.close - periodLow) / (pastHighPeriods.periodHigh - periodLow) * 100;\n                d = dSma.nextValue(k);\n                tick = yield {\n                    k: format(k),\n                    d: d ? format(d) : undefined\n                };\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(input) {\n        let nextResult = this.generator.next(input);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nStochastic.calculate = stochastic;\nexport function stochastic(input) {\n    Indicator.reverseInputs(input);\n    var result = new Stochastic(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=Stochastic.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class WilliamsRInput extends IndicatorInput {\n}\n;\nexport class WilliamsR extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%R = (Highest High - Close)/(Highest High - Lowest Low) * -100\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%R is multiplied by -100 correct the inversion and move the decimal.\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let periodLow;\n            let periodHigh;\n            var tick = yield;\n            let williamsR;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                periodLow = pastLowPeriods.periodLow;\n                periodHigh = pastHighPeriods.periodHigh;\n                williamsR = format((periodHigh - tick.close) / (periodHigh - periodLow) * -100);\n                tick = yield williamsR;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((low, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nWilliamsR.calculate = williamsr;\nexport function williamsr(input) {\n    Indicator.reverseInputs(input);\n    var result = new WilliamsR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=WilliamsR.js.map","/**\n * Created by AAravindan on 5/17/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class ADLInput extends IndicatorInput {\n}\nexport class ADL extends Indicator {\n    constructor(input) {\n        super(input);\n        var highs = input.high;\n        var lows = input.low;\n        var closes = input.close;\n        var volumes = input.volume;\n        if (!((lows.length === highs.length) && (highs.length === closes.length) && (highs.length === volumes.length))) {\n            throw ('Inputs(low,high, close, volumes) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            tick = yield;\n            while (true) {\n                let moneyFlowMultiplier = ((tick.close - tick.low) - (tick.high - tick.close)) / (tick.high - tick.low);\n                let moneyFlowVolume = moneyFlowMultiplier * tick.volume;\n                result = result + moneyFlowVolume;\n                tick = yield Math.round(result);\n            }\n        })();\n        this.generator.next();\n        highs.forEach((tickHigh, index) => {\n            var tickInput = {\n                high: tickHigh,\n                low: lows[index],\n                close: closes[index],\n                volume: volumes[index]\n            };\n            var result = this.generator.next(tickInput);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nADL.calculate = adl;\nexport function adl(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADL(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADL.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/17/16.\n */\n\"use strict\";\nexport class OBVInput extends IndicatorInput {\n}\nexport class OBV extends Indicator {\n    constructor(input) {\n        super(input);\n        var closes = input.close;\n        var volumes = input.volume;\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            var lastClose;\n            tick = yield;\n            if (tick.close && (typeof tick.close === 'number')) {\n                lastClose = tick.close;\n                tick = yield;\n            }\n            while (true) {\n                if (lastClose < tick.close) {\n                    result = result + tick.volume;\n                }\n                else if (tick.close < lastClose) {\n                    result = result - tick.volume;\n                }\n                lastClose = tick.close;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        closes.forEach((close, index) => {\n            let tickInput = {\n                close: closes[index],\n                volume: volumes[index]\n            };\n            let result = this.generator.next(tickInput);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nOBV.calculate = obv;\nexport function obv(input) {\n    Indicator.reverseInputs(input);\n    var result = new OBV(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=OBV.js.map","/**\n * Created by AAravindan on 5/9/16.\n */\n\"use strict\";\nimport { ROC } from './ROC.js';\nimport { EMA } from '../moving_averages/EMA.js';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class TRIXInput extends IndicatorInput {\n}\n;\nexport class TRIX extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let period = input.period;\n        let format = this.format;\n        let ema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfemaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let trixROC = new ROC({ period: 1, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            let tick = yield;\n            while (true) {\n                let initialema = ema.nextValue(tick);\n                let smoothedResult = initialema ? emaOfema.nextValue(initialema) : undefined;\n                let doubleSmoothedResult = smoothedResult ? emaOfemaOfema.nextValue(smoothedResult) : undefined;\n                let result = doubleSmoothedResult ? trixROC.nextValue(doubleSmoothedResult) : undefined;\n                tick = yield result ? format(result) : undefined;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nTRIX.calculate = trix;\nexport function trix(input) {\n    Indicator.reverseInputs(input);\n    var result = new TRIX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TRIX.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class MorningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysLow > seconddaysLow) &&\n            (firstdaysLow > seconddaysHigh));\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && isSmallBodyExists && gapExists && isThirdBullish && doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningstar(data) {\n    return new MorningStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishEngulfing = ((firstdaysClose < firstdaysOpen) &&\n            (firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysOpen < seconddaysClose));\n        return (isBullishEngulfing);\n    }\n}\nexport function bullishengulfingpattern(data) {\n    return new BullishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BullishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = \"BullishHarami\";\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBullishHaramiPattern);\n    }\n}\nexport function bullishharami(data) {\n    return new BullishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BullishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BullishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiCrossPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBullishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bullishharamicross(data) {\n    return new BullishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BullishHaramiCross.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class Doji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Doji';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        return this.approximateEqual(daysOpen, daysClose);\n    }\n}\nexport function doji(data) {\n    return new Doji().hasPattern(data);\n}\n//# sourceMappingURL=Doji.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class MorningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && dojiExists && isThirdBullish && gapExists &&\n            doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningdojistar(data) {\n    return new MorningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DownsideTasukiGap extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 3;\n        this.name = 'DownsideTasukiGap';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isThirdBullish = thirddaysClose > thirddaysOpen;\n        let isFirstGapExists = seconddaysHigh < firstdaysLow;\n        let isDownsideTasukiGap = ((seconddaysOpen > thirddaysOpen) &&\n            (seconddaysClose < thirddaysOpen) &&\n            (thirddaysClose > seconddaysOpen) &&\n            (thirddaysClose < firstdaysClose));\n        return (isFirstBearish && isSecondBearish && isThirdBullish && isFirstGapExists && isDownsideTasukiGap);\n    }\n}\nexport function downsidetasukigap(data) {\n    return new DownsideTasukiGap().hasPattern(data);\n}\n//# sourceMappingURL=DownsideTasukiGap.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBullishMarbozu = this.approximateEqual(daysClose, daysHigh) &&\n            this.approximateEqual(daysLow, daysOpen) &&\n            daysOpen < daysClose &&\n            daysOpen < daysHigh;\n        return (isBullishMarbozu);\n    }\n}\nexport function bullishmarubozu(data) {\n    return new BullishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BullishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class PiercingLine extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'PiercingLine';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isDowntrend = seconddaysLow < firstdaysLow;\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBullish = seconddaysClose > seconddaysOpen;\n        let isPiercingLinePattern = ((firstdaysLow > seconddaysOpen) &&\n            (seconddaysClose > firstdaysMidpoint));\n        return (isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish);\n    }\n}\nexport function piercingline(data) {\n    return new PiercingLine().hasPattern(data);\n}\n//# sourceMappingURL=PiercingLine.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeWhiteSoldiers extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeWhiteSoldiers';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isUpTrend = seconddaysHigh > firstdaysHigh &&\n            thirddaysHigh > seconddaysHigh;\n        let isAllBullish = firstdaysOpen < firstdaysClose &&\n            seconddaysOpen < seconddaysClose &&\n            thirddaysOpen < thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysClose > seconddaysOpen &&\n            seconddaysOpen < firstdaysHigh &&\n            seconddaysHigh > thirddaysOpen &&\n            thirddaysOpen < seconddaysClose;\n        return (isUpTrend && isAllBullish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threewhitesoldiers(data) {\n    return new ThreeWhiteSoldiers().hasPattern(data);\n}\n//# sourceMappingURL=ThreeWhiteSoldiers.js.map","import MorningStar from './MorningStar';\nimport BullishEngulfingPattern from './BullishEngulfingPattern';\nimport BullishHarami from './BullishHarami';\nimport BullishHaramiCross from './BullishHaramiCross';\nimport MorningDojiStar from './MorningDojiStar';\nimport DownsideTasukiGap from './DownsideTasukiGap';\nimport BullishMarubozu from './BullishMarubozu';\nimport PiercingLine from './PiercingLine';\nimport ThreeWhiteSoldiers from './ThreeWhiteSoldiers';\nimport CandlestickFinder from './CandlestickFinder';\nlet bullishPatterns = [new BullishEngulfingPattern(), new DownsideTasukiGap(), new BullishHarami(), new BullishHaramiCross(),\n    new MorningDojiStar(), new MorningStar(), new BullishMarubozu(), new PiercingLine(), new ThreeWhiteSoldiers()];\nexport default class BullishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bullish Candlesticks';\n    }\n    hasPattern(data) {\n        return bullishPatterns.reduce(function (state, pattern) {\n            let result = pattern.hasPattern(data);\n            if (result) {\n                console.log('Matched pattern ', pattern.name);\n            }\n            return state || result;\n        }, false);\n    }\n}\nexport function bullish(data) {\n    return new BullishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bullish.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishEngulfing = ((firstdaysClose > firstdaysOpen) &&\n            (firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysOpen > seconddaysClose));\n        return (isBearishEngulfing);\n    }\n}\nexport function bearishengulfingpattern(data) {\n    return new BearishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BearishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHarami';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBearishHaramiPattern);\n    }\n}\nexport function bearishharami(data) {\n    return new BearishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BearishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiCrossPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBearishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bearishharamicross(data) {\n    return new BearishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BearishHaramiCross.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class EveningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && dojiExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningdojistar(data) {\n    return new EveningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class EveningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysHigh < seconddaysLow) &&\n            (firstdaysHigh < seconddaysHigh));\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && isSmallBodyExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningstar(data) {\n    return new EveningStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBearishMarbozu = this.approximateEqual(daysOpen, daysHigh) &&\n            this.approximateEqual(daysLow, daysClose) &&\n            daysOpen > daysClose &&\n            daysOpen > daysLow;\n        return (isBearishMarbozu);\n    }\n}\nexport function bearishmarubozu(data) {\n    return new BearishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BearishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeBlackCrows extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeBlackCrows';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isDownTrend = firstdaysLow > seconddaysLow &&\n            seconddaysLow > thirddaysLow;\n        let isAllBearish = firstdaysOpen > firstdaysClose &&\n            seconddaysOpen > seconddaysClose &&\n            thirddaysOpen > thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysOpen > seconddaysOpen &&\n            seconddaysOpen > firstdaysClose &&\n            seconddaysOpen > thirddaysOpen &&\n            thirddaysOpen > seconddaysClose;\n        return (isDownTrend && isAllBearish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threeblackcrows(data) {\n    return new ThreeBlackCrows().hasPattern(data);\n}\n//# sourceMappingURL=ThreeBlackCrows.js.map","import BearishEngulfingPattern from './BearishEngulfingPattern';\nimport BearishHarami from './BearishHarami';\nimport BearishHaramiCross from './BearishHaramiCross';\nimport EveningDojiStar from './EveningDojiStar';\nimport EveningStar from './EveningStar';\nimport BearishMarubozu from './BearishMarubozu';\nimport ThreeBlackCrows from './ThreeBlackCrows';\nimport CandlestickFinder from './CandlestickFinder';\nlet bearishPatterns = [new BearishEngulfingPattern(), new BearishHarami(), new BearishHaramiCross(), new EveningDojiStar(),\n    new EveningStar(), new BearishMarubozu(), new ThreeBlackCrows()];\nexport default class BearishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bearish Candlesticks';\n    }\n    hasPattern(data) {\n        return bearishPatterns.reduce(function (state, pattern) {\n            return state || pattern.hasPattern(data);\n        }, false);\n    }\n}\nexport function bearish(data) {\n    return new BearishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bearish.js.map","import CandlestickFinder from './CandlestickFinder';\nimport Doji from './Doji';\nexport default class AbandonedBaby extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'AbandonedBaby';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (thirddaysLow > seconddaysHigh) &&\n            (thirddaysClose > thirddaysOpen));\n        let isThirdBullish = (thirddaysHigh < firstdaysOpen);\n        return (isFirstBearish && dojiExists && gapExists && isThirdBullish);\n    }\n}\nexport function abandonedbaby(data) {\n    return new AbandonedBaby().hasPattern(data);\n}\n//# sourceMappingURL=AbandonedBaby.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DarkCloudCover extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'DarkCloudCover';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdayMidpoint = ((firstdaysClose + firstdaysOpen) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isDarkCloudPattern = ((seconddaysOpen > firstdaysHigh) &&\n            (seconddaysClose < firstdayMidpoint) &&\n            (seconddaysClose > firstdaysOpen));\n        return (isFirstBullish && isSecondBearish && isDarkCloudPattern);\n    }\n}\nexport function darkcloudcover(data) {\n    return new DarkCloudCover().hasPattern(data);\n}\n//# sourceMappingURL=DarkCloudCover.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DragonFlyDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'DragonFlyDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isHighEqualsOpen = this.approximateEqual(daysOpen, daysHigh);\n        return (isOpenEqualsClose && isHighEqualsOpen);\n    }\n}\nexport function dragonflydoji(data) {\n    return new DragonFlyDoji().hasPattern(data);\n}\n//# sourceMappingURL=DragonFlyDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class GraveStoneDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'GraveStoneDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysLow = data.low[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isLowEqualsOpen = this.approximateEqual(daysOpen, daysLow);\n        return (isOpenEqualsClose && isLowEqualsOpen);\n    }\n}\nexport function gravestonedoji(data) {\n    return new GraveStoneDoji().hasPattern(data);\n}\n//# sourceMappingURL=GraveStoneDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysClose);\n        let lowerShadowLength = Math.abs(daysOpen - daysLow);\n        let isBullishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBullishSpinningTop;\n    }\n}\nexport function bullishspinningtop(data) {\n    return new BullishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BullishSpinningTop.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysOpen);\n        let lowerShadowLength = Math.abs(daysHigh - daysLow);\n        let isBearishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBearishSpinningTop;\n    }\n}\nexport function bearishspinningtop(data) {\n    return new BearishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BearishSpinningTop.js.map","/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\n/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */ export function fibonacciretracement(start, end) {\n    let levels = [0, 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6];\n    let retracements;\n    if (start < end) {\n        retracements = levels.map(function (level) {\n            let calculated = end - Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    else {\n        retracements = levels.map(function (level) {\n            let calculated = end + Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    return retracements;\n}\n//# sourceMappingURL=fibonacci.js.map","import 'babel-polyfill'; \nexport * from './lib/index.js';\nexport function getAvailableIndicators () {\n  let AvailableIndicators   = []\n  AvailableIndicators.push('sma');\n  AvailableIndicators.push('ema');\n  AvailableIndicators.push('wma');\n  AvailableIndicators.push('wema');\n  AvailableIndicators.push('macd');\n  AvailableIndicators.push('rsi');\n  AvailableIndicators.push('bollingerbands');\n  AvailableIndicators.push('adx');\n  AvailableIndicators.push('atr');\n  AvailableIndicators.push('truerange');\n  AvailableIndicators.push('roc');\n  AvailableIndicators.push('kst');\n  AvailableIndicators.push('stochastic');\n  AvailableIndicators.push('williamsr');\n  AvailableIndicators.push('adl');\n  AvailableIndicators.push('obv');\n  AvailableIndicators.push('trix');\n  AvailableIndicators.push('averagegain');\n  AvailableIndicators.push('averageloss');\n  AvailableIndicators.push('sd');\n  AvailableIndicators.push('bullish');\n  AvailableIndicators.push('bearish');\n  AvailableIndicators.push('abandonedbaby');\n  AvailableIndicators.push('doji');\n  AvailableIndicators.push('bearishengulfingpattern');\n  AvailableIndicators.push('bullishengulfingpattern');\n  AvailableIndicators.push('darkcloudcover');\n  AvailableIndicators.push('downsidetasukigap');\n  AvailableIndicators.push('dragonflydoji');\n  AvailableIndicators.push('gravestonedoji');\n  AvailableIndicators.push('bullishharami');\n  AvailableIndicators.push('bearishharami');\n  AvailableIndicators.push('bullishharamicross');\n  AvailableIndicators.push('bearishharamicross');\n  AvailableIndicators.push('eveningdojistar');\n  AvailableIndicators.push('eveningstar');\n  AvailableIndicators.push('morningdojistar');\n  AvailableIndicators.push('morningstar');\n  AvailableIndicators.push('bullishmarubozu');\n  AvailableIndicators.push('bearishmarubozu');\n  AvailableIndicators.push('piercingline');\n  AvailableIndicators.push('bullishspinningtop');\n  AvailableIndicators.push('bearishspinningtop');\n  AvailableIndicators.push('threeblackcrows');\n  AvailableIndicators.push('threewhitesoldiers');\n  return AvailableIndicators;\n};\n","import { format as nf } from '../Utils/NumberFormatter';\nexport class IndicatorInput {\n}\nexport class AllInputs {\n}\nexport class Indicator {\n    constructor(input) {\n        this.format = input.format || nf;\n    }\n    static reverseInputs(input) {\n        if (input.reversedInput) {\n            input.values ? input.values.reverse() : undefined;\n            input.open ? input.open.reverse() : undefined;\n            input.high ? input.high.reverse() : undefined;\n            input.low ? input.low.reverse() : undefined;\n            input.close ? input.close.reverse() : undefined;\n            input.volume ? input.volume.reverse() : undefined;\n        }\n    }\n    getResult() {\n        return this.result;\n    }\n}\n//# sourceMappingURL=indicator.js.map","class Item {\n    constructor(data, prev, next) {\n        this.next = next;\n        if (next)\n            next.prev = this;\n        this.prev = prev;\n        if (prev)\n            prev.next = this;\n        this.data = data;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this._length = 0;\n    }\n    get head() {\n        return this._head && this._head.data;\n    }\n    get tail() {\n        return this._tail && this._tail.data;\n    }\n    get current() {\n        return this._current && this._current.data;\n    }\n    get length() {\n        return this._length;\n    }\n    push(data) {\n        this._tail = new Item(data, this._tail);\n        if (this._length === 0) {\n            this._head = this._tail;\n            this._current = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    pop() {\n        var tail = this._tail;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return tail.data;\n        }\n        this._tail = tail.prev;\n        this._tail.next = undefined;\n        if (this._current === tail) {\n            this._current = this._tail;\n            this._next = undefined;\n        }\n        return tail.data;\n    }\n    shift() {\n        var head = this._head;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return head.data;\n        }\n        this._head = this._head.next;\n        if (this._current === head) {\n            this._current = this._head;\n            this._next = this._current.next;\n        }\n        return head.data;\n    }\n    unshift(data) {\n        this._head = new Item(data, undefined, this._head);\n        if (this._length === 0) {\n            this._tail = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    unshiftCurrent() {\n        var current = this._current;\n        if (current === this._head || this._length < 2) {\n            return current && current.data;\n        }\n        // remove\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        // unshift\n        current.next = this._head;\n        current.prev = undefined;\n        this._head.prev = current;\n        this._head = current;\n        return current.data;\n    }\n    removeCurrent() {\n        var current = this._current;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return current.data;\n        }\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else if (current === this._head) {\n            this._head = current.next;\n            this._head.prev = undefined;\n            this._current = this._head;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        return current.data;\n    }\n    resetCursor() {\n        this._current = this._next = this._head;\n        return this;\n    }\n    next() {\n        var next = this._next;\n        if (next !== undefined) {\n            this._next = next.next;\n            this._current = next;\n            return next.data;\n        }\n    }\n}\n//# sourceMappingURL=LinkedList.js.map","/**\n * Created by AAravindan on 5/7/16.\n */\nimport { LinkedList } from './LinkedList';\nexport default class FixedSizeLinkedList extends LinkedList {\n    constructor(size, maintainHigh, maintainLow) {\n        super();\n        this.size = size;\n        this.maintainHigh = maintainHigh;\n        this.maintainLow = maintainLow;\n        this.periodHigh = 0;\n        this.periodLow = Infinity;\n        if (!size || typeof size !== 'number') {\n            throw ('Size required and should be a number.');\n        }\n        this._push = this.push;\n        this.push = function (data) {\n            this.add(data);\n        };\n    }\n    add(data) {\n        if (this.length === this.size) {\n            this.lastShift = this.shift();\n            this._push(data);\n            //TODO: FInd a better way\n            if (this.maintainHigh)\n                if (this.lastShift == this.periodHigh)\n                    this.calculatePeriodHigh();\n            if (this.maintainLow)\n                if (this.lastShift == this.periodLow)\n                    this.calculatePeriodLow();\n        }\n        else {\n            this._push(data);\n        }\n        //TODO: FInd a better way\n        if (this.maintainHigh)\n            if (this.periodHigh <= data)\n                (this.periodHigh = data);\n        if (this.maintainLow)\n            if (this.periodLow >= data)\n                (this.periodLow = data);\n    }\n    *iterator() {\n        this.resetCursor();\n        while (this.next()) {\n            yield this.current;\n        }\n    }\n    calculatePeriodHigh() {\n        this.resetCursor();\n        if (this.next())\n            this.periodHigh = this.current;\n        while (this.next()) {\n            if (this.periodHigh <= this.current) {\n                this.periodHigh = this.current;\n            }\n            ;\n        }\n        ;\n    }\n    calculatePeriodLow() {\n        this.resetCursor();\n        if (this.next())\n            this.periodLow = this.current;\n        while (this.next()) {\n            if (this.periodLow >= this.current) {\n                this.periodLow = this.current;\n            }\n            ;\n        }\n        ;\n    }\n}\n//# sourceMappingURL=FixedSizeLinkedList.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class MDMInput extends IndicatorInput {\n}\n;\nexport class MDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var minusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    minusDm = format((downMove > upMove && downMove > 0) ? downMove : 0);\n                }\n                last = current;\n                current = yield minusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new MDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=MinusDM.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\nexport class PDMInput extends IndicatorInput {\n}\n;\nexport class PDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var plusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    plusDm = format((upMove > downMove && upMove > 0) ? upMove : 0);\n                }\n                last = current;\n                current = yield plusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new PDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=PlusDM.js.map","export default class CandlestickFinder {\n    constructor() {\n        // if (new.target === Abstract) {\n        //     throw new TypeError(\"Abstract class\");\n        // }\n    }\n    approximateEqual(a, b) {\n        let left = parseFloat(Math.abs(a - b).toPrecision(4)) * 1;\n        let right = parseFloat((a * 0.001).toPrecision(4)) * 1;\n        return left <= right;\n    }\n    logic(data) {\n        throw \"this has to be implemented\";\n    }\n    getAllPatternIndex(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return [];\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return this._generateDataForCandleStick(data)\n            .map((current, index) => {\n            return strategyFn.call(this, current) ? index : undefined;\n        }).filter((hasIndex) => {\n            return hasIndex;\n        });\n    }\n    hasPattern(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return false;\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return strategyFn.call(this, this._getLastDataForCandleStick(data));\n    }\n    _getLastDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        if (data.close.length === requiredCount) {\n            return data;\n        }\n        else {\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            let i = 0;\n            let index = data.close.length - requiredCount;\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }\n    }\n    _generateDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        let generatedData = data.close.map(function (currentData, index) {\n            let i = 0;\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }).filter((val, index) => { return (index <= (data.close.length - requiredCount)); });\n        return generatedData;\n    }\n}\n//# sourceMappingURL=CandlestickFinder.js.map"],"names":["format","v","parseFloat","toFixed","sma","input","reverseInputs","result","SMA","reversedInput","reverse","ema","EMA","wma","WMA","wema","WEMA","macd","MACD","averagegain","AverageGain","averageloss","AverageLoss","rsi","RSI","sd","SD","bollingerbands","BollingerBands","truerange","TrueRange","adx","ADX","atr","ATR","roc","ROC","kst","KST","stochastic","Stochastic","williamsr","WilliamsR","adl","ADL","obv","OBV","trix","TRIX","morningstar","data","MorningStar","hasPattern","bullishengulfingpattern","BullishEngulfingPattern","bullishharami","BullishHarami","bullishharamicross","BullishHaramiCross","doji","Doji","morningdojistar","MorningDojiStar","downsidetasukigap","DownsideTasukiGap","bullishmarubozu","BullishMarubozu","piercingline","PiercingLine","threewhitesoldiers","ThreeWhiteSoldiers","bullish","BullishPatterns","bearishengulfingpattern","BearishEngulfingPattern","bearishharami","BearishHarami","bearishharamicross","BearishHaramiCross","eveningdojistar","EveningDojiStar","eveningstar","EveningStar","bearishmarubozu","BearishMarubozu","threeblackcrows","ThreeBlackCrows","bearish","BearishPatterns","abandonedbaby","AbandonedBaby","darkcloudcover","DarkCloudCover","dragonflydoji","DragonFlyDoji","gravestonedoji","GraveStoneDoji","bullishspinningtop","BullishSpinningTop","bearishspinningtop","BearishSpinningTop","fibonacciretracement","start","end","levels","map","level","calculated","Math","abs","getAvailableIndicators","AvailableIndicators","push","IndicatorInput","Indicator","nf","this","values","open","high","low","close","volume","Item","prev","next","LinkedList","_length","_tail","_head","_current","_next","tail","undefined","head","current","period","price","genFn","counter","sum","list","shift","generator","_this2","forEach","tick","value","calculate","priceArray","exponent","prevEma","nextValue","_this","regeneratorRuntime","length","resetCursor","i","denominator","index","prevMa","currentMa","SimpleMAOscillator","SimpleMASignal","oscillatorMAtype","signalMAtype","fastMAProducer","fastPeriod","slowMAProducer","slowPeriod","signalMAProducer","signalPeriod","fast","slow","signal","isNaN","histogram","lastValue","currentValue","gain","avgGain","gainSum","loss","avgLoss","lossSum","GainProvider","LossProvider","lastAvgGain","lastAvgLoss","RS","currentRSI","FixedSizeLinkedList","size","maintainHigh","maintainLow","periodHigh","periodLow","Infinity","_push","add","lastShift","calculatePeriodHigh","calculatePeriodLow","currentSet","iterator","pow","x","mean","sqrt","nextResult","stdDev","_this3","calcSMA","calcsd","lower","upper","middle","pb","MDM","lows","highs","last","downMove","upMove","minusDm","PDM","plusDm","closes","max","previousClose","plusDM","minusDM","smaDX","tr","calcPDM","calcMDM","calcTr","lastAPDM","lastATR","lastAMDM","lastPDI","lastMDI","smoothedDX","lastDX","trueRange","trange","avgTrueRange","pastPeriods","rocPer1","ROCPer1","rocPer2","ROCPer2","rocPer3","ROCPer3","rocPer4","ROCPer4","smaPer1","SMAROCPer1","smaPer2","SMAROCPer2","smaPer3","SMAROCPer3","smaPer4","SMAROCPer4","roc1","roc2","roc3","roc4","sma1","sma2","sma3","sma4","signalSMA","firstResult","RCMA2","RCMA3","RCMA4","roc1Result","roc2Result","roc3Result","roc4Result","RCMA1","d","pastLowPeriods","pastHighPeriods","dSma","k","williamsR","volumes","moneyFlowMultiplier","moneyFlowVolume","round","tickHigh","tickInput","lastClose","emaOfema","emaOfemaOfema","trixROC","initialema","smoothedResult","doubleSmoothedResult","CandlestickFinder","a","b","toPrecision","requiredCount","warn","name","strategyFn","logic","_generateDataForCandleStick","call","filter","hasIndex","_getLastDataForCandleStick","returnVal","currentData","val","firstdaysOpen","firstdaysClose","firstdaysLow","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","firstdaysMidpoint","isFirstBearish","isSmallBodyExists","isThirdBullish","gapExists","doesCloseAboveFirstMidpoint","seconddaysOpen","firstdaysHigh","isBullishHaramiCrossPattern","isSecondDayDoji","approximateEqual","daysOpen","daysClose","dojiExists","isSecondBearish","isFirstGapExists","isDownsideTasukiGap","daysHigh","daysLow","isDowntrend","isSecondBullish","isPiercingLinePattern","thirddaysHigh","isUpTrend","isAllBullish","doesOpenWithinPreviousBody","bullishPatterns","reduce","state","pattern","log","isBearishHaramiCrossPattern","isFirstBullish","isThirdBearish","doesCloseBelowFirstMidpoint","thirddaysLow","isDownTrend","isAllBearish","bearishPatterns","firstdayMidpoint","isDarkCloudPattern","isOpenEqualsClose","isHighEqualsOpen","isLowEqualsOpen","bodyLength","upperShadowLength","lowerShadowLength"],"mappings":"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"}