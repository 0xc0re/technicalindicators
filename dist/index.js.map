{"version":3,"file":"index.js","sources":["../lib/Utils/NumberFormatter.js","../lib/moving_averages/SMA.js","../lib/moving_averages/EMA.js","../lib/moving_averages/WMA.js","../lib/moving_averages/WEMA.js","../lib/moving_averages/MACD.js","../lib/Utils/AverageGain.js","../lib/Utils/AverageLoss.js","../lib/oscillators/RSI.js","../lib/Utils/SD.js","../lib/volatility/BollingerBands.js","../lib/moving_averages/WilderSmoothing.js","../lib/directionalmovement/TrueRange.js","../lib/directionalmovement/ADX.js","../lib/directionalmovement/ATR.js","../lib/momentum/ROC.js","../lib/momentum/KST.js","../lib/momentum/Stochastic.js","../lib/momentum/WilliamsR.js","../lib/volume/ADL.js","../lib/volume/OBV.js","../lib/momentum/TRIX.js","../lib/candlestick/MorningStar.js","../lib/candlestick/BullishEngulfingPattern.js","../lib/candlestick/BullishHarami.js","../lib/candlestick/BullishHaramiCross.js","../lib/candlestick/Doji.js","../lib/candlestick/MorningDojiStar.js","../lib/candlestick/DownsideTasukiGap.js","../lib/candlestick/BullishMarubozu.js","../lib/candlestick/PiercingLine.js","../lib/candlestick/ThreeWhiteSoldiers.js","../lib/candlestick/Bullish.js","../lib/candlestick/BearishEngulfingPattern.js","../lib/candlestick/BearishHarami.js","../lib/candlestick/BearishHaramiCross.js","../lib/candlestick/EveningDojiStar.js","../lib/candlestick/EveningStar.js","../lib/candlestick/BearishMarubozu.js","../lib/candlestick/ThreeBlackCrows.js","../lib/candlestick/Bearish.js","../lib/candlestick/AbandonedBaby.js","../lib/candlestick/DarkCloudCover.js","../lib/candlestick/DragonFlyDoji.js","../lib/candlestick/GraveStoneDoji.js","../lib/candlestick/BullishSpinningTop.js","../lib/candlestick/BearishSpinningTop.js","../lib/drawingtools/fibonacci.js","../index.js","../lib/indicator/indicator.js","../lib/Utils/LinkedList.js","../lib/Utils/FixedSizeLinkedList.js","../lib/directionalmovement/MinusDM.js","../lib/directionalmovement/PlusDM.js","../lib/candlestick/CandlestickFinder.js"],"sourcesContent":["export function format(v) {\n    return parseFloat(v.toFixed(5));\n}\n//# sourceMappingURL=NumberFormatter.js.map","//STEP 1. Import Necessary indicator or rather last step\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\n//STEP 2. Create the input for the indicator, mandatory should be in the constructor\nexport class MAInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n    }\n}\n//STEP3. Add class based syntax with export\nexport class SMA extends Indicator {\n    constructor(input) {\n        super(input);\n        this.period = input.period;\n        this.price = input.values;\n        var genFn = (function* (period) {\n            var list = new LinkedList();\n            var sum = 0;\n            var counter = 1;\n            var current = yield;\n            var result;\n            list.push(0);\n            while (true) {\n                if (counter < period) {\n                    counter++;\n                    list.push(current);\n                    sum = sum + current;\n                }\n                else {\n                    sum = sum - list.shift() + current;\n                    result = ((sum) / period);\n                    list.push(current);\n                }\n                current = yield result;\n            }\n        });\n        this.generator = genFn(this.period);\n        this.generator.next();\n        this.result = [];\n        this.price.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nSMA.calculate = sma;\nexport function sma(input) {\n    Indicator.reverseInputs(input);\n    var result = new SMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//STEP 6. Run the tests \n//# sourceMappingURL=SMA.js.map","import { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class EMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var exponent = (2 / (period + 1));\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [] });\n        var genFn = (function* () {\n            var tick = yield;\n            var prevEma;\n            while (true) {\n                if (prevEma && tick) {\n                    prevEma = ((tick - prevEma) * exponent) + prevEma;\n                    tick = yield prevEma;\n                }\n                else {\n                    tick = yield;\n                    prevEma = sma.nextValue(tick);\n                    if (prevEma)\n                        tick = yield prevEma;\n                }\n            }\n        });\n        this.generator = genFn();\n        this.generator.next();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nEMA.calculate = ema;\nexport function ema(input) {\n    Indicator.reverseInputs(input);\n    var result = new EMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=EMA.js.map","\"use strict\";\nimport { Indicator } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\nexport class WMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let data = new LinkedList();\n            let denominator = period * (period + 1) / 2;\n            while (true) {\n                if ((data.length) < period) {\n                    data.push(yield);\n                }\n                else {\n                    data.resetCursor();\n                    let result = 0;\n                    for (let i = 1; i <= period; i++) {\n                        result = result + (data.next() * i / (denominator));\n                    }\n                    var next = yield result;\n                    data.shift();\n                    data.push(next);\n                }\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick, index) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    //STEP 5. REMOVE GET RESULT FUNCTION\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result)\n            return this.format(result);\n    }\n    ;\n}\nWMA.calculate = wma;\n;\nexport function wma(input) {\n    Indicator.reverseInputs(input);\n    var result = new WMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WMA.js.map","import { Indicator } from '../indicator/indicator';\nimport { SMA } from './SMA';\nexport class WEMA extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var exponent = 1 / period;\n        var sma;\n        this.result = [];\n        sma = new SMA({ period: period, values: [] });\n        var genFn = (function* () {\n            var tick = yield;\n            var prevEma;\n            while (true) {\n                if (prevEma && tick != undefined) {\n                    prevEma = ((tick - prevEma) * exponent) + prevEma;\n                    tick = yield prevEma;\n                }\n                else {\n                    tick = yield;\n                    prevEma = sma.nextValue(tick);\n                    if (prevEma)\n                        tick = yield prevEma;\n                }\n            }\n        });\n        this.generator = genFn();\n        this.generator.next();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nWEMA.calculate = wema;\nexport function wema(input) {\n    Indicator.reverseInputs(input);\n    var result = new WEMA(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n//# sourceMappingURL=WEMA.js.map","/**\n * Created by AAravindan on 5/4/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from './SMA';\nimport { EMA } from './EMA';\nexport class MACDInput extends IndicatorInput {\n    constructor(period, values) {\n        super();\n        this.period = period;\n        this.values = values;\n        this.SimpleMAOscillator = true;\n        this.SimpleMASignal = true;\n    }\n}\nexport class MACDOutput {\n}\nexport class MACD extends Indicator {\n    constructor(input) {\n        super(input);\n        var oscillatorMAtype = input.SimpleMAOscillator ? SMA : EMA;\n        var signalMAtype = input.SimpleMASignal ? SMA : EMA;\n        var fastMAProducer = new oscillatorMAtype({ period: input.fastPeriod, values: [], format: (v) => { return v; } });\n        var slowMAProducer = new oscillatorMAtype({ period: input.slowPeriod, values: [], format: (v) => { return v; } });\n        var signalMAProducer = new signalMAtype({ period: input.signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        this.generator = (function* () {\n            var index = 0;\n            var tick;\n            var MACD, signal, histogram, fast, slow;\n            while (true) {\n                if (index < input.slowPeriod) {\n                    tick = yield;\n                    fast = fastMAProducer.nextValue(tick);\n                    slow = slowMAProducer.nextValue(tick);\n                    index++;\n                    continue;\n                }\n                if (fast && slow) {\n                    MACD = fast - slow;\n                    signal = signalMAProducer.nextValue(MACD);\n                }\n                histogram = MACD - signal;\n                tick = yield ({\n                    //fast : fast,\n                    //slow : slow,\n                    MACD: format(MACD),\n                    signal: signal ? format(signal) : undefined,\n                    histogram: isNaN(histogram) ? undefined : format(histogram)\n                });\n                fast = fastMAProducer.nextValue(tick);\n                slow = slowMAProducer.nextValue(tick);\n            }\n        })();\n        this.generator.next();\n        input.values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        return result;\n    }\n    ;\n}\nMACD.calculate = macd;\nexport function macd(input) {\n    Indicator.reverseInputs(input);\n    var result = new MACD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=MACD.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgGainInput extends IndicatorInput {\n}\nexport class AverageGain extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var gainSum = 0;\n            var avgGain;\n            var gain;\n            var lastValue;\n            while (true) {\n                gain = lastValue ? (currentValue - lastValue) : 0;\n                gain = gain ? gain : 0;\n                if (gain > 0) {\n                    gainSum = gainSum + gain;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgGain) {\n                    avgGain = gainSum / period;\n                }\n                else {\n                    avgGain = ((avgGain * (period - 1)) + (gain > 0 ? gain : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgGain = avgGain ? format(avgGain) : undefined;\n                currentValue = yield avgGain;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageGain.calculate = averagegain;\nexport function averagegain(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageGain(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageGain.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class AvgLossInput extends IndicatorInput {\n}\nexport class AverageLoss extends Indicator {\n    constructor(input) {\n        super(input);\n        let values = input.values;\n        let period = input.period;\n        let format = this.format;\n        this.generator = (function* (period) {\n            var currentValue = yield;\n            var counter = 1;\n            var lossSum = 0;\n            var avgLoss;\n            var loss;\n            var lastValue;\n            while (true) {\n                loss = lastValue ? (lastValue - currentValue) : 0;\n                loss = loss ? loss : 0;\n                if (loss > 0) {\n                    lossSum = lossSum + loss;\n                }\n                if (counter < (period + 1)) {\n                    counter++;\n                }\n                else if (!avgLoss) {\n                    avgLoss = lossSum / period;\n                }\n                else {\n                    avgLoss = ((avgLoss * (period - 1)) + (loss > 0 ? loss : 0)) / period;\n                }\n                lastValue = currentValue;\n                avgLoss = avgLoss ? format(avgLoss) : undefined;\n                currentValue = yield avgLoss;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nAverageLoss.calculate = averageloss;\nexport function averageloss(input) {\n    Indicator.reverseInputs(input);\n    var result = new AverageLoss(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=AverageLoss.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/5/16.\n */\nimport { AverageGain } from '../Utils/AverageGain';\nimport { AverageLoss } from '../Utils/AverageLoss';\nexport class RSIInput extends IndicatorInput {\n}\nexport class RSI extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var values = input.values;\n        var GainProvider = new AverageGain({ period: period, values: [] });\n        var LossProvider = new AverageLoss({ period: period, values: [] });\n        this.generator = (function* (period) {\n            var current = yield;\n            var lastAvgGain, lastAvgLoss, RS, currentRSI;\n            while (true) {\n                lastAvgGain = GainProvider.nextValue(current);\n                lastAvgLoss = LossProvider.nextValue(current);\n                if (lastAvgGain && lastAvgLoss) {\n                    if (lastAvgLoss === 0) {\n                        currentRSI = 100;\n                    }\n                    else {\n                        RS = lastAvgGain / lastAvgLoss;\n                        currentRSI = parseFloat((100 - (100 / (1 + RS))).toFixed(2));\n                    }\n                }\n                current = yield currentRSI;\n            }\n        })(period);\n        this.generator.next();\n        this.result = [];\n        values.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nRSI.calculate = rsi;\nexport function rsi(input) {\n    Indicator.reverseInputs(input);\n    var result = new RSI(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=RSI.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\n/**\n * Created by AAravindan on 5/7/16.\n */\n\"use strict\";\nexport class SDInput extends IndicatorInput {\n}\n;\nexport class SD extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick;\n            var mean;\n            var currentSet = new LinkedList(period);\n            ;\n            tick = yield;\n            var sd;\n            while (true) {\n                currentSet.push(tick);\n                mean = sma.nextValue(tick);\n                if (mean) {\n                    let sum = 0;\n                    for (let x of currentSet.iterator()) {\n                        sum = sum + (Math.pow((x - mean), 2));\n                    }\n                    sd = Math.sqrt(sum / (period));\n                }\n                tick = yield sd;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nSD.calculate = sd;\nexport function sd(input) {\n    Indicator.reverseInputs(input);\n    var result = new SD(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=SD.js.map","\"use strict\";\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { SD } from '../Utils/SD';\nexport class BollingerBandsInput extends IndicatorInput {\n}\n;\nexport class BollingerBandsOutput extends IndicatorInput {\n}\n;\nexport class BollingerBands extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        var stdDev = input.stdDev;\n        var format = this.format;\n        var sma, sd;\n        this.result = [];\n        sma = new SMA({ period: period, values: [], format: (v) => { return v; } });\n        sd = new SD({ period: period, values: [], format: (v) => { return v; } });\n        this.generator = (function* () {\n            var result;\n            var tick;\n            var calcSMA;\n            var calcsd;\n            tick = yield;\n            while (true) {\n                calcSMA = sma.nextValue(tick);\n                calcsd = sd.nextValue(tick);\n                if (calcSMA) {\n                    let middle = format(calcSMA);\n                    let upper = format(calcSMA + (calcsd * stdDev));\n                    let lower = format(calcSMA - (calcsd * stdDev));\n                    let pb = format((tick - lower) / (upper - lower));\n                    result = {\n                        middle: middle,\n                        upper: upper,\n                        lower: lower,\n                        pb: pb\n                    };\n                }\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nBollingerBands.calculate = bollingerbands;\nexport function bollingerbands(input) {\n    Indicator.reverseInputs(input);\n    var result = new BollingerBands(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=BollingerBands.js.map","import { Indicator } from '../indicator/indicator';\nimport { LinkedList } from '../Utils/LinkedList';\n//STEP3. Add class based syntax with export\nexport class WilderSmoothing extends Indicator {\n    constructor(input) {\n        super(input);\n        this.period = input.period;\n        this.price = input.values;\n        var genFn = (function* (period) {\n            var list = new LinkedList();\n            var sum = 0;\n            var counter = 1;\n            var current = yield;\n            var result;\n            while (true) {\n                if (counter < period) {\n                    counter++;\n                    sum = sum + current;\n                }\n                else if (counter == period) {\n                    counter++;\n                    sum = sum + current;\n                    result = sum;\n                }\n                else {\n                    result = result - (result / period) + current;\n                }\n                current = yield result;\n            }\n        });\n        this.generator = genFn(this.period);\n        this.generator.next();\n        this.result = [];\n        this.price.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value != undefined) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var result = this.generator.next(price).value;\n        if (result != undefined)\n            return this.format(result);\n    }\n    ;\n}\nWilderSmoothing.calculate = wildersmoothing;\nexport function wildersmoothing(input) {\n    Indicator.reverseInputs(input);\n    var result = new WilderSmoothing(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//STEP 6. Run the tests \n//# sourceMappingURL=WilderSmoothing.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class TrueRangeInput extends IndicatorInput {\n}\n;\nexport class TrueRange extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var current = yield;\n            var previousClose, result;\n            while (true) {\n                if (previousClose === undefined) {\n                    previousClose = current.close;\n                    current = yield result;\n                }\n                result = Math.max(current.high - current.low, isNaN(Math.abs(current.high - previousClose)) ? 0 : Math.abs(current.high - previousClose), isNaN(Math.abs(current.low - previousClose)) ? 0 : Math.abs(current.low - previousClose));\n                previousClose = current.close;\n                if (result != undefined) {\n                    result = format(result);\n                }\n                current = yield result;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value != undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nTrueRange.calculate = truerange;\nexport function truerange(input) {\n    Indicator.reverseInputs(input);\n    var result = new TrueRange(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TrueRange.js.map","import { WilderSmoothing } from '../moving_averages/WilderSmoothing';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { MDM } from './MinusDM';\nimport { PDM } from './PlusDM';\nimport { TrueRange } from './TrueRange';\nimport { WEMA } from '../moving_averages/WEMA';\nexport class ADXInput extends IndicatorInput {\n}\n;\nexport class ADX extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        var plusDM = new PDM({\n            high: [],\n            low: []\n        });\n        var minusDM = new MDM({\n            high: [],\n            low: []\n        });\n        var emaPDM = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaMDM = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaTR = new WilderSmoothing({ period: period, values: [], format: (v) => { return v; } });\n        var emaDX = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        var tr = new TrueRange({\n            low: [],\n            high: [],\n            close: [],\n        });\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var index = 0;\n            var lastATR, lastAPDM, lastAMDM, lastPDI, lastMDI, lastDX, smoothedDX;\n            lastATR = 0;\n            lastAPDM = 0;\n            lastAMDM = 0;\n            while (true) {\n                let calcTr = tr.nextValue(tick);\n                let calcPDM = plusDM.nextValue(tick);\n                let calcMDM = minusDM.nextValue(tick);\n                if (calcTr === undefined) {\n                    tick = yield;\n                    continue;\n                }\n                let lastATR = emaTR.nextValue(calcTr);\n                let lastAPDM = emaPDM.nextValue(calcPDM);\n                let lastAMDM = emaMDM.nextValue(calcMDM);\n                if ((lastATR != undefined) && (lastAPDM != undefined) && (lastAMDM != undefined)) {\n                    lastPDI = (lastAPDM) * 100 / lastATR;\n                    lastMDI = (lastAMDM) * 100 / lastATR;\n                    let diDiff = Math.abs(lastPDI - lastMDI);\n                    let diSum = (lastPDI + lastMDI);\n                    lastDX = (diDiff / diSum) * 100;\n                    smoothedDX = emaDX.nextValue(lastDX);\n                    // console.log(tick.high.toFixed(2), tick.low.toFixed(2), tick.close.toFixed(2) , calcTr.toFixed(2), calcPDM.toFixed(2), calcMDM.toFixed(2), lastATR.toFixed(2), lastAPDM.toFixed(2), lastAMDM.toFixed(2), lastPDI.toFixed(2), lastMDI.toFixed(2), diDiff.toFixed(2), diSum.toFixed(2), lastDX.toFixed(2));\n                }\n                tick = yield smoothedDX;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let result = this.generator.next(price).value;\n        if (result) {\n            return this.format(result);\n        }\n    }\n    ;\n}\nADX.calculate = adx;\nexport function adx(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADX.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nimport { WEMA } from '../moving_averages/WEMA';\nimport { TrueRange } from './TrueRange';\nexport class ATRInput extends IndicatorInput {\n}\n;\nexport class ATR extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var closes = input.close;\n        var period = input.period;\n        var format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        var trueRange = new TrueRange({\n            low: [],\n            high: [],\n            close: []\n        });\n        var wema = new WEMA({ period: period, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            var tick = yield;\n            var avgTrueRange, trange;\n            ;\n            while (true) {\n                trange = trueRange.nextValue({\n                    low: tick.low,\n                    high: tick.high,\n                    close: tick.close\n                });\n                if (trange === undefined) {\n                    avgTrueRange = undefined;\n                }\n                else {\n                    avgTrueRange = wema.nextValue(trange);\n                }\n                tick = yield avgTrueRange;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(format(result.value));\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nATR.calculate = atr;\nexport function atr(input) {\n    Indicator.reverseInputs(input);\n    var result = new ATR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ATR.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class ROCInput extends IndicatorInput {\n}\nexport class ROC extends Indicator {\n    constructor(input) {\n        super(input);\n        var period = input.period;\n        var priceArray = input.values;\n        this.result = [];\n        this.generator = (function* () {\n            let index = 1;\n            var pastPeriods = new LinkedList(period);\n            ;\n            var tick = yield;\n            var roc;\n            while (true) {\n                pastPeriods.push(tick);\n                if (index < period) {\n                    index++;\n                }\n                else {\n                    roc = ((tick - pastPeriods.lastShift) / (pastPeriods.lastShift)) * 100;\n                }\n                tick = yield roc;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            var result = this.generator.next(tick);\n            if (result.value) {\n                this.result.push(this.format(result.value));\n            }\n        });\n    }\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nROC.calculate = roc;\n;\nexport function roc(input) {\n    Indicator.reverseInputs(input);\n    var result = new ROC(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ROC.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\nimport { SMA } from '../moving_averages/SMA';\nimport { ROC } from './ROC';\nexport class KSTInput extends IndicatorInput {\n}\nexport class KSTOutput {\n}\nexport class KST extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let rocPer1 = input.ROCPer1;\n        let rocPer2 = input.ROCPer2;\n        let rocPer3 = input.ROCPer3;\n        let rocPer4 = input.ROCPer4;\n        let smaPer1 = input.SMAROCPer1;\n        let smaPer2 = input.SMAROCPer2;\n        let smaPer3 = input.SMAROCPer3;\n        let smaPer4 = input.SMAROCPer4;\n        let signalPeriod = input.signalPeriod;\n        let roc1 = new ROC({ period: rocPer1, values: [] });\n        let roc2 = new ROC({ period: rocPer2, values: [] });\n        let roc3 = new ROC({ period: rocPer3, values: [] });\n        let roc4 = new ROC({ period: rocPer4, values: [] });\n        let sma1 = new SMA({ period: smaPer1, values: [], format: (v) => { return v; } });\n        let sma2 = new SMA({ period: smaPer2, values: [], format: (v) => { return v; } });\n        let sma3 = new SMA({ period: smaPer3, values: [], format: (v) => { return v; } });\n        let sma4 = new SMA({ period: smaPer4, values: [], format: (v) => { return v; } });\n        let signalSMA = new SMA({ period: signalPeriod, values: [], format: (v) => { return v; } });\n        var format = this.format;\n        this.result = [];\n        let firstResult = Math.max(rocPer1 + smaPer1, rocPer2 + smaPer2, rocPer3 + smaPer3, rocPer4 + smaPer4);\n        this.generator = (function* () {\n            let index = 1;\n            let tick = yield;\n            let kst;\n            let RCMA1, RCMA2, RCMA3, RCMA4, signal, result;\n            while (true) {\n                let roc1Result = roc1.nextValue(tick);\n                let roc2Result = roc2.nextValue(tick);\n                let roc3Result = roc3.nextValue(tick);\n                let roc4Result = roc4.nextValue(tick);\n                RCMA1 = (roc1Result !== undefined) ? sma1.nextValue(roc1Result) : undefined;\n                RCMA2 = (roc2Result !== undefined) ? sma2.nextValue(roc2Result) : undefined;\n                RCMA3 = (roc3Result !== undefined) ? sma3.nextValue(roc3Result) : undefined;\n                RCMA4 = (roc4Result !== undefined) ? sma4.nextValue(roc4Result) : undefined;\n                if (index < firstResult) {\n                    index++;\n                }\n                else {\n                    kst = (RCMA1 * 1) + (RCMA2 * 2) + (RCMA3 * 3) + (RCMA4 * 4);\n                }\n                signal = (kst !== undefined) ? signalSMA.nextValue(kst) : undefined;\n                result = kst !== undefined ? {\n                    kst: format(kst),\n                    signal: signal ? format(signal) : undefined\n                } : undefined;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nKST.calculate = kst;\nexport function kst(input) {\n    Indicator.reverseInputs(input);\n    var result = new KST(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=KST.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/10/16.\n */\n\"use strict\";\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nimport { SMA } from '../moving_averages/SMA';\nexport class StochasticInput extends IndicatorInput {\n}\n;\nexport class StochasticOutput {\n}\n;\nexport class Stochastic extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let signalPeriod = input.signalPeriod;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%K = (Current Close - Lowest Low)/(Highest High - Lowest Low) * 100\n        //%D = 3-day SMA of %K\n        //\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%K is multiplied by 100 to move the decimal point two places\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let dSma = new SMA({\n                period: signalPeriod,\n                values: [],\n                format: (v) => { return v; }\n            });\n            let k, d;\n            var tick = yield;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                let periodLow = pastLowPeriods.periodLow;\n                k = (tick.close - periodLow) / (pastHighPeriods.periodHigh - periodLow) * 100;\n                d = dSma.nextValue(k);\n                tick = yield {\n                    k: format(k),\n                    d: d ? format(d) : undefined\n                };\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(input) {\n        let nextResult = this.generator.next(input);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nStochastic.calculate = stochastic;\nexport function stochastic(input) {\n    Indicator.reverseInputs(input);\n    var result = new Stochastic(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=Stochastic.js.map","import { IndicatorInput, Indicator } from '../indicator/indicator';\nimport LinkedList from '../Utils/FixedSizeLinkedList';\nexport class WilliamsRInput extends IndicatorInput {\n}\n;\nexport class WilliamsR extends Indicator {\n    constructor(input) {\n        super(input);\n        let lows = input.low;\n        let highs = input.high;\n        let closes = input.close;\n        let period = input.period;\n        let format = this.format;\n        if (!((lows.length === highs.length) && (highs.length === closes.length))) {\n            throw ('Inputs(low,high, close) not of equal size');\n        }\n        this.result = [];\n        //%R = (Highest High - Close)/(Highest High - Lowest Low) * -100\n        //Lowest Low = lowest low for the look-back period\n        //Highest High = highest high for the look-back period\n        //%R is multiplied by -100 correct the inversion and move the decimal.\n        this.generator = (function* () {\n            let index = 1;\n            let pastHighPeriods = new LinkedList(period, true, false);\n            let pastLowPeriods = new LinkedList(period, false, true);\n            let periodLow;\n            let periodHigh;\n            var tick = yield;\n            let williamsR;\n            while (true) {\n                pastHighPeriods.push(tick.high);\n                pastLowPeriods.push(tick.low);\n                if (index < period) {\n                    index++;\n                    tick = yield;\n                    continue;\n                }\n                periodLow = pastLowPeriods.periodLow;\n                periodHigh = pastHighPeriods.periodHigh;\n                williamsR = format((periodHigh - tick.close) / (periodHigh - periodLow) * -100);\n                tick = yield williamsR;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((low, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index],\n                close: closes[index]\n            });\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        var nextResult = this.generator.next(price);\n        if (nextResult.value)\n            return this.format(nextResult.value);\n    }\n    ;\n}\nWilliamsR.calculate = williamsr;\nexport function williamsr(input) {\n    Indicator.reverseInputs(input);\n    var result = new WilliamsR(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=WilliamsR.js.map","/**\n * Created by AAravindan on 5/17/16.\n */\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class ADLInput extends IndicatorInput {\n}\nexport class ADL extends Indicator {\n    constructor(input) {\n        super(input);\n        var highs = input.high;\n        var lows = input.low;\n        var closes = input.close;\n        var volumes = input.volume;\n        if (!((lows.length === highs.length) && (highs.length === closes.length) && (highs.length === volumes.length))) {\n            throw ('Inputs(low,high, close, volumes) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            tick = yield;\n            while (true) {\n                let moneyFlowMultiplier = ((tick.close - tick.low) - (tick.high - tick.close)) / (tick.high - tick.low);\n                let moneyFlowVolume = moneyFlowMultiplier * tick.volume;\n                result = result + moneyFlowVolume;\n                tick = yield Math.round(result);\n            }\n        })();\n        this.generator.next();\n        highs.forEach((tickHigh, index) => {\n            var tickInput = {\n                high: tickHigh,\n                low: lows[index],\n                close: closes[index],\n                volume: volumes[index]\n            };\n            var result = this.generator.next(tickInput);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nADL.calculate = adl;\nexport function adl(input) {\n    Indicator.reverseInputs(input);\n    var result = new ADL(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=ADL.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/17/16.\n */\n\"use strict\";\nexport class OBVInput extends IndicatorInput {\n}\nexport class OBV extends Indicator {\n    constructor(input) {\n        super(input);\n        var closes = input.close;\n        var volumes = input.volume;\n        this.result = [];\n        this.generator = (function* () {\n            var result = 0;\n            var tick;\n            var lastClose;\n            tick = yield;\n            if (tick.close && (typeof tick.close === 'number')) {\n                lastClose = tick.close;\n                tick = yield;\n            }\n            while (true) {\n                if (lastClose < tick.close) {\n                    result = result + tick.volume;\n                }\n                else if (tick.close < lastClose) {\n                    result = result - tick.volume;\n                }\n                lastClose = tick.close;\n                tick = yield result;\n            }\n        })();\n        this.generator.next();\n        closes.forEach((close, index) => {\n            let tickInput = {\n                close: closes[index],\n                volume: volumes[index]\n            };\n            let result = this.generator.next(tickInput);\n            if (result.value) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\nOBV.calculate = obv;\nexport function obv(input) {\n    Indicator.reverseInputs(input);\n    var result = new OBV(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=OBV.js.map","/**\n * Created by AAravindan on 5/9/16.\n */\n\"use strict\";\nimport { ROC } from './ROC.js';\nimport { EMA } from '../moving_averages/EMA.js';\nimport { Indicator, IndicatorInput } from '../indicator/indicator';\nexport class TRIXInput extends IndicatorInput {\n}\n;\nexport class TRIX extends Indicator {\n    constructor(input) {\n        super(input);\n        let priceArray = input.values;\n        let period = input.period;\n        let format = this.format;\n        let ema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let emaOfemaOfema = new EMA({ period: period, values: [], format: (v) => { return v; } });\n        let trixROC = new ROC({ period: 1, values: [], format: (v) => { return v; } });\n        this.result = [];\n        this.generator = (function* () {\n            let tick = yield;\n            while (true) {\n                let initialema = ema.nextValue(tick);\n                let smoothedResult = initialema ? emaOfema.nextValue(initialema) : undefined;\n                let doubleSmoothedResult = smoothedResult ? emaOfemaOfema.nextValue(smoothedResult) : undefined;\n                let result = doubleSmoothedResult ? trixROC.nextValue(doubleSmoothedResult) : undefined;\n                tick = yield result ? format(result) : undefined;\n            }\n        })();\n        this.generator.next();\n        priceArray.forEach((tick) => {\n            let result = this.generator.next(tick);\n            if (result.value !== undefined) {\n                this.result.push(result.value);\n            }\n        });\n    }\n    nextValue(price) {\n        let nextResult = this.generator.next(price);\n        if (nextResult.value !== undefined)\n            return nextResult.value;\n    }\n    ;\n}\nTRIX.calculate = trix;\nexport function trix(input) {\n    Indicator.reverseInputs(input);\n    var result = new TRIX(input).result;\n    if (input.reversedInput) {\n        result.reverse();\n    }\n    Indicator.reverseInputs(input);\n    return result;\n}\n;\n//# sourceMappingURL=TRIX.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class MorningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysLow > seconddaysLow) &&\n            (firstdaysLow > seconddaysHigh));\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && isSmallBodyExists && gapExists && isThirdBullish && doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningstar(data) {\n    return new MorningStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishEngulfing = ((firstdaysClose < firstdaysOpen) &&\n            (firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysOpen < seconddaysClose));\n        return (isBullishEngulfing);\n    }\n}\nexport function bullishengulfingpattern(data) {\n    return new BullishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BullishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = \"BullishHarami\";\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBullishHaramiPattern);\n    }\n}\nexport function bullishharami(data) {\n    return new BullishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BullishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BullishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBullishHaramiCrossPattern = ((firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose > seconddaysOpen) &&\n            (firstdaysClose > seconddaysClose) &&\n            (firstdaysOpen < seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBullishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bullishharamicross(data) {\n    return new BullishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BullishHaramiCross.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class Doji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Doji';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        return this.approximateEqual(daysOpen, daysClose);\n    }\n}\nexport function doji(data) {\n    return new Doji().hasPattern(data);\n}\n//# sourceMappingURL=Doji.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class MorningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'MorningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBullish = thirddaysOpen < thirddaysClose;\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (seconddaysLow < firstdaysLow) &&\n            (thirddaysOpen > seconddaysHigh) &&\n            (seconddaysClose < thirddaysOpen));\n        let doesCloseAboveFirstMidpoint = thirddaysClose > firstdaysMidpoint;\n        return (isFirstBearish && dojiExists && isThirdBullish && gapExists &&\n            doesCloseAboveFirstMidpoint);\n    }\n}\nexport function morningdojistar(data) {\n    return new MorningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=MorningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DownsideTasukiGap extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 3;\n        this.name = 'DownsideTasukiGap';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isThirdBullish = thirddaysClose > thirddaysOpen;\n        let isFirstGapExists = seconddaysHigh < firstdaysLow;\n        let isDownsideTasukiGap = ((seconddaysOpen > thirddaysOpen) &&\n            (seconddaysClose < thirddaysOpen) &&\n            (thirddaysClose > seconddaysOpen) &&\n            (thirddaysClose < firstdaysClose));\n        return (isFirstBearish && isSecondBearish && isThirdBullish && isFirstGapExists && isDownsideTasukiGap);\n    }\n}\nexport function downsidetasukigap(data) {\n    return new DownsideTasukiGap().hasPattern(data);\n}\n//# sourceMappingURL=DownsideTasukiGap.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBullishMarbozu = this.approximateEqual(daysClose, daysHigh) &&\n            this.approximateEqual(daysLow, daysOpen) &&\n            daysOpen < daysClose &&\n            daysOpen < daysHigh;\n        return (isBullishMarbozu);\n    }\n}\nexport function bullishmarubozu(data) {\n    return new BullishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BullishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class PiercingLine extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'PiercingLine';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isDowntrend = seconddaysLow < firstdaysLow;\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let isSecondBullish = seconddaysClose > seconddaysOpen;\n        let isPiercingLinePattern = ((firstdaysLow > seconddaysOpen) &&\n            (seconddaysClose > firstdaysMidpoint));\n        return (isDowntrend && isFirstBearish && isPiercingLinePattern && isSecondBullish);\n    }\n}\nexport function piercingline(data) {\n    return new PiercingLine().hasPattern(data);\n}\n//# sourceMappingURL=PiercingLine.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeWhiteSoldiers extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeWhiteSoldiers';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isUpTrend = seconddaysHigh > firstdaysHigh &&\n            thirddaysHigh > seconddaysHigh;\n        let isAllBullish = firstdaysOpen < firstdaysClose &&\n            seconddaysOpen < seconddaysClose &&\n            thirddaysOpen < thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysClose > seconddaysOpen &&\n            seconddaysOpen < firstdaysHigh &&\n            seconddaysHigh > thirddaysOpen &&\n            thirddaysOpen < seconddaysClose;\n        return (isUpTrend && isAllBullish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threewhitesoldiers(data) {\n    return new ThreeWhiteSoldiers().hasPattern(data);\n}\n//# sourceMappingURL=ThreeWhiteSoldiers.js.map","import MorningStar from './MorningStar';\nimport BullishEngulfingPattern from './BullishEngulfingPattern';\nimport BullishHarami from './BullishHarami';\nimport BullishHaramiCross from './BullishHaramiCross';\nimport MorningDojiStar from './MorningDojiStar';\nimport DownsideTasukiGap from './DownsideTasukiGap';\nimport BullishMarubozu from './BullishMarubozu';\nimport PiercingLine from './PiercingLine';\nimport ThreeWhiteSoldiers from './ThreeWhiteSoldiers';\nimport CandlestickFinder from './CandlestickFinder';\nlet bullishPatterns = [new BullishEngulfingPattern(), new DownsideTasukiGap(), new BullishHarami(), new BullishHaramiCross(),\n    new MorningDojiStar(), new MorningStar(), new BullishMarubozu(), new PiercingLine(), new ThreeWhiteSoldiers()];\nexport default class BullishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bullish Candlesticks';\n    }\n    hasPattern(data) {\n        return bullishPatterns.reduce(function (state, pattern) {\n            let result = pattern.hasPattern(data);\n            if (result) {\n                console.log('Matched pattern ', pattern.name);\n            }\n            return state || result;\n        }, false);\n    }\n}\nexport function bullish(data) {\n    return new BullishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bullish.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishEngulfingPattern extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishEngulfingPattern';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishEngulfing = ((firstdaysClose > firstdaysOpen) &&\n            (firstdaysOpen < seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysOpen > seconddaysClose));\n        return (isBearishEngulfing);\n    }\n}\nexport function bearishengulfingpattern(data) {\n    return new BearishEngulfingPattern().hasPattern(data);\n}\n//# sourceMappingURL=BearishEngulfingPattern.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHarami extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHarami';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        return (isBearishHaramiPattern);\n    }\n}\nexport function bearishharami(data) {\n    return new BearishHarami().hasPattern(data);\n}\n//# sourceMappingURL=BearishHarami.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishHaramiCross extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 2;\n        this.name = 'BearishHaramiCross';\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let isBearishHaramiCrossPattern = ((firstdaysOpen > seconddaysOpen) &&\n            (firstdaysClose < seconddaysOpen) &&\n            (firstdaysClose < seconddaysClose) &&\n            (firstdaysOpen > seconddaysLow) &&\n            (firstdaysHigh > seconddaysHigh));\n        let isSecondDayDoji = this.approximateEqual(seconddaysOpen, seconddaysClose);\n        return (isBearishHaramiCrossPattern && isSecondDayDoji);\n    }\n}\nexport function bearishharamicross(data) {\n    return new BearishHaramiCross().hasPattern(data);\n}\n//# sourceMappingURL=BearishHaramiCross.js.map","import Doji from './Doji';\nimport CandlestickFinder from './CandlestickFinder';\nexport default class EveningDojiStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningDojiStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && dojiExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningdojistar(data) {\n    return new EveningDojiStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningDojiStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class EveningStar extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'EveningStar';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let firstdaysMidpoint = ((firstdaysOpen + firstdaysClose) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSmallBodyExists = ((firstdaysHigh < seconddaysLow) &&\n            (firstdaysHigh < seconddaysHigh));\n        let isThirdBearish = thirddaysOpen > thirddaysClose;\n        let gapExists = ((seconddaysHigh > firstdaysHigh) &&\n            (seconddaysLow > firstdaysHigh) &&\n            (thirddaysOpen < seconddaysLow) &&\n            (seconddaysClose > thirddaysOpen));\n        let doesCloseBelowFirstMidpoint = thirddaysClose < firstdaysMidpoint;\n        return (isFirstBullish && isSmallBodyExists && gapExists && isThirdBearish && doesCloseBelowFirstMidpoint);\n    }\n}\nexport function eveningstar(data) {\n    return new EveningStar().hasPattern(data);\n}\n//# sourceMappingURL=EveningStar.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishMarubozu extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishMarubozu';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let isBearishMarbozu = this.approximateEqual(daysOpen, daysHigh) &&\n            this.approximateEqual(daysLow, daysClose) &&\n            daysOpen > daysClose &&\n            daysOpen > daysLow;\n        return (isBearishMarbozu);\n    }\n}\nexport function bearishmarubozu(data) {\n    return new BearishMarubozu().hasPattern(data);\n}\n//# sourceMappingURL=BearishMarubozu.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class ThreeBlackCrows extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'ThreeBlackCrows';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isDownTrend = firstdaysLow > seconddaysLow &&\n            seconddaysLow > thirddaysLow;\n        let isAllBearish = firstdaysOpen > firstdaysClose &&\n            seconddaysOpen > seconddaysClose &&\n            thirddaysOpen > thirddaysClose;\n        let doesOpenWithinPreviousBody = firstdaysOpen > seconddaysOpen &&\n            seconddaysOpen > firstdaysClose &&\n            seconddaysOpen > thirddaysOpen &&\n            thirddaysOpen > seconddaysClose;\n        return (isDownTrend && isAllBearish && doesOpenWithinPreviousBody);\n    }\n}\nexport function threeblackcrows(data) {\n    return new ThreeBlackCrows().hasPattern(data);\n}\n//# sourceMappingURL=ThreeBlackCrows.js.map","import BearishEngulfingPattern from './BearishEngulfingPattern';\nimport BearishHarami from './BearishHarami';\nimport BearishHaramiCross from './BearishHaramiCross';\nimport EveningDojiStar from './EveningDojiStar';\nimport EveningStar from './EveningStar';\nimport BearishMarubozu from './BearishMarubozu';\nimport ThreeBlackCrows from './ThreeBlackCrows';\nimport CandlestickFinder from './CandlestickFinder';\nlet bearishPatterns = [new BearishEngulfingPattern(), new BearishHarami(), new BearishHaramiCross(), new EveningDojiStar(),\n    new EveningStar(), new BearishMarubozu(), new ThreeBlackCrows()];\nexport default class BearishPatterns extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'Bearish Candlesticks';\n    }\n    hasPattern(data) {\n        return bearishPatterns.reduce(function (state, pattern) {\n            return state || pattern.hasPattern(data);\n        }, false);\n    }\n}\nexport function bearish(data) {\n    return new BearishPatterns().hasPattern(data);\n}\n//# sourceMappingURL=Bearish.js.map","import CandlestickFinder from './CandlestickFinder';\nimport Doji from './Doji';\nexport default class AbandonedBaby extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'AbandonedBaby';\n        this.requiredCount = 3;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let thirddaysOpen = data.open[2];\n        let thirddaysClose = data.close[2];\n        let thirddaysHigh = data.high[2];\n        let thirddaysLow = data.low[2];\n        let isFirstBearish = firstdaysClose < firstdaysOpen;\n        let dojiExists = new Doji().hasPattern({\n            \"open\": [seconddaysOpen],\n            \"close\": [seconddaysClose],\n            \"high\": [seconddaysHigh],\n            \"low\": [seconddaysLow]\n        });\n        let gapExists = ((seconddaysHigh < firstdaysLow) &&\n            (thirddaysLow > seconddaysHigh) &&\n            (thirddaysClose > thirddaysOpen));\n        let isThirdBullish = (thirddaysHigh < firstdaysOpen);\n        return (isFirstBearish && dojiExists && gapExists && isThirdBullish);\n    }\n}\nexport function abandonedbaby(data) {\n    return new AbandonedBaby().hasPattern(data);\n}\n//# sourceMappingURL=AbandonedBaby.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DarkCloudCover extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'DarkCloudCover';\n        this.requiredCount = 2;\n    }\n    logic(data) {\n        let firstdaysOpen = data.open[0];\n        let firstdaysClose = data.close[0];\n        let firstdaysHigh = data.high[0];\n        let firstdaysLow = data.low[0];\n        let seconddaysOpen = data.open[1];\n        let seconddaysClose = data.close[1];\n        let seconddaysHigh = data.high[1];\n        let seconddaysLow = data.low[1];\n        let firstdayMidpoint = ((firstdaysClose + firstdaysOpen) / 2);\n        let isFirstBullish = firstdaysClose > firstdaysOpen;\n        let isSecondBearish = seconddaysClose < seconddaysOpen;\n        let isDarkCloudPattern = ((seconddaysOpen > firstdaysHigh) &&\n            (seconddaysClose < firstdayMidpoint) &&\n            (seconddaysClose > firstdaysOpen));\n        return (isFirstBullish && isSecondBearish && isDarkCloudPattern);\n    }\n}\nexport function darkcloudcover(data) {\n    return new DarkCloudCover().hasPattern(data);\n}\n//# sourceMappingURL=DarkCloudCover.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class DragonFlyDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'DragonFlyDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isHighEqualsOpen = this.approximateEqual(daysOpen, daysHigh);\n        return (isOpenEqualsClose && isHighEqualsOpen);\n    }\n}\nexport function dragonflydoji(data) {\n    return new DragonFlyDoji().hasPattern(data);\n}\n//# sourceMappingURL=DragonFlyDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class GraveStoneDoji extends CandlestickFinder {\n    constructor() {\n        super();\n        this.requiredCount = 1;\n        this.name = 'GraveStoneDoji';\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysLow = data.low[0];\n        let isOpenEqualsClose = this.approximateEqual(daysOpen, daysClose);\n        let isLowEqualsOpen = this.approximateEqual(daysOpen, daysLow);\n        return (isOpenEqualsClose && isLowEqualsOpen);\n    }\n}\nexport function gravestonedoji(data) {\n    return new GraveStoneDoji().hasPattern(data);\n}\n//# sourceMappingURL=GraveStoneDoji.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BullishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BullishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysClose);\n        let lowerShadowLength = Math.abs(daysOpen - daysLow);\n        let isBullishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBullishSpinningTop;\n    }\n}\nexport function bullishspinningtop(data) {\n    return new BullishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BullishSpinningTop.js.map","import CandlestickFinder from './CandlestickFinder';\nexport default class BearishSpinningTop extends CandlestickFinder {\n    constructor() {\n        super();\n        this.name = 'BearishSpinningTop';\n        this.requiredCount = 1;\n    }\n    logic(data) {\n        let daysOpen = data.open[0];\n        let daysClose = data.close[0];\n        let daysHigh = data.high[0];\n        let daysLow = data.low[0];\n        let bodyLength = Math.abs(daysClose - daysOpen);\n        let upperShadowLength = Math.abs(daysHigh - daysOpen);\n        let lowerShadowLength = Math.abs(daysHigh - daysLow);\n        let isBearishSpinningTop = bodyLength < upperShadowLength &&\n            bodyLength < lowerShadowLength;\n        return isBearishSpinningTop;\n    }\n}\nexport function bearishspinningtop(data) {\n    return new BearishSpinningTop().hasPattern(data);\n}\n//# sourceMappingURL=BearishSpinningTop.js.map","/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */\n/**\n * Calcaultes the fibonacci retracements for given start and end points\n *\n * If calculating for up trend start should be low and end should be high and vice versa\n *\n * returns an array of retracements level containing [0 , 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6]\n *\n * @export\n * @param {number} start\n * @param {number} end\n * @returns {number[]}\n */ export function fibonacciretracement(start, end) {\n    let levels = [0, 23.6, 38.2, 50, 61.8, 78.6, 100, 127.2, 161.8, 261.8, 423.6];\n    let retracements;\n    if (start < end) {\n        retracements = levels.map(function (level) {\n            let calculated = end - Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    else {\n        retracements = levels.map(function (level) {\n            let calculated = end + Math.abs(start - end) * (level) / 100;\n            return calculated > 0 ? calculated : 0;\n        });\n    }\n    return retracements;\n}\n//# sourceMappingURL=fibonacci.js.map","export * from './lib/index.js';\nexport function getAvailableIndicators () {\n  let AvailableIndicators   = []\n  AvailableIndicators.push('sma');\n  AvailableIndicators.push('ema');\n  AvailableIndicators.push('wma');\n  AvailableIndicators.push('wema');\n  AvailableIndicators.push('macd');\n  AvailableIndicators.push('rsi');\n  AvailableIndicators.push('bollingerbands');\n  AvailableIndicators.push('adx');\n  AvailableIndicators.push('atr');\n  AvailableIndicators.push('truerange');\n  AvailableIndicators.push('roc');\n  AvailableIndicators.push('kst');\n  AvailableIndicators.push('stochastic');\n  AvailableIndicators.push('williamsr');\n  AvailableIndicators.push('adl');\n  AvailableIndicators.push('obv');\n  AvailableIndicators.push('trix');\n  AvailableIndicators.push('averagegain');\n  AvailableIndicators.push('averageloss');\n  AvailableIndicators.push('sd');\n  AvailableIndicators.push('bullish');\n  AvailableIndicators.push('bearish');\n  AvailableIndicators.push('abandonedbaby');\n  AvailableIndicators.push('doji');\n  AvailableIndicators.push('bearishengulfingpattern');\n  AvailableIndicators.push('bullishengulfingpattern');\n  AvailableIndicators.push('darkcloudcover');\n  AvailableIndicators.push('downsidetasukigap');\n  AvailableIndicators.push('dragonflydoji');\n  AvailableIndicators.push('gravestonedoji');\n  AvailableIndicators.push('bullishharami');\n  AvailableIndicators.push('bearishharami');\n  AvailableIndicators.push('bullishharamicross');\n  AvailableIndicators.push('bearishharamicross');\n  AvailableIndicators.push('eveningdojistar');\n  AvailableIndicators.push('eveningstar');\n  AvailableIndicators.push('morningdojistar');\n  AvailableIndicators.push('morningstar');\n  AvailableIndicators.push('bullishmarubozu');\n  AvailableIndicators.push('bearishmarubozu');\n  AvailableIndicators.push('piercingline');\n  AvailableIndicators.push('bullishspinningtop');\n  AvailableIndicators.push('bearishspinningtop');\n  AvailableIndicators.push('threeblackcrows');\n  AvailableIndicators.push('threewhitesoldiers');\n  return AvailableIndicators;\n};\n","import { format as nf } from '../Utils/NumberFormatter';\nexport class IndicatorInput {\n}\nexport class AllInputs {\n}\nexport class Indicator {\n    constructor(input) {\n        this.format = input.format || nf;\n    }\n    static reverseInputs(input) {\n        if (input.reversedInput) {\n            input.values ? input.values.reverse() : undefined;\n            input.open ? input.open.reverse() : undefined;\n            input.high ? input.high.reverse() : undefined;\n            input.low ? input.low.reverse() : undefined;\n            input.close ? input.close.reverse() : undefined;\n            input.volume ? input.volume.reverse() : undefined;\n        }\n    }\n    getResult() {\n        return this.result;\n    }\n}\n//# sourceMappingURL=indicator.js.map","class Item {\n    constructor(data, prev, next) {\n        this.next = next;\n        if (next)\n            next.prev = this;\n        this.prev = prev;\n        if (prev)\n            prev.next = this;\n        this.data = data;\n    }\n}\nexport class LinkedList {\n    constructor() {\n        this._length = 0;\n    }\n    get head() {\n        return this._head && this._head.data;\n    }\n    get tail() {\n        return this._tail && this._tail.data;\n    }\n    get current() {\n        return this._current && this._current.data;\n    }\n    get length() {\n        return this._length;\n    }\n    push(data) {\n        this._tail = new Item(data, this._tail);\n        if (this._length === 0) {\n            this._head = this._tail;\n            this._current = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    pop() {\n        var tail = this._tail;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return tail.data;\n        }\n        this._tail = tail.prev;\n        this._tail.next = undefined;\n        if (this._current === tail) {\n            this._current = this._tail;\n            this._next = undefined;\n        }\n        return tail.data;\n    }\n    shift() {\n        var head = this._head;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return head.data;\n        }\n        this._head = this._head.next;\n        if (this._current === head) {\n            this._current = this._head;\n            this._next = this._current.next;\n        }\n        return head.data;\n    }\n    unshift(data) {\n        this._head = new Item(data, undefined, this._head);\n        if (this._length === 0) {\n            this._tail = this._head;\n            this._next = this._head;\n        }\n        this._length++;\n    }\n    unshiftCurrent() {\n        var current = this._current;\n        if (current === this._head || this._length < 2) {\n            return current && current.data;\n        }\n        // remove\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        // unshift\n        current.next = this._head;\n        current.prev = undefined;\n        this._head.prev = current;\n        this._head = current;\n        return current.data;\n    }\n    removeCurrent() {\n        var current = this._current;\n        if (this._length === 0) {\n            return;\n        }\n        this._length--;\n        if (this._length === 0) {\n            this._head = this._tail = this._current = this._next = undefined;\n            return current.data;\n        }\n        if (current === this._tail) {\n            this._tail = current.prev;\n            this._tail.next = undefined;\n            this._current = this._tail;\n        }\n        else if (current === this._head) {\n            this._head = current.next;\n            this._head.prev = undefined;\n            this._current = this._head;\n        }\n        else {\n            current.next.prev = current.prev;\n            current.prev.next = current.next;\n            this._current = current.prev;\n        }\n        this._next = this._current.next;\n        return current.data;\n    }\n    resetCursor() {\n        this._current = this._next = this._head;\n        return this;\n    }\n    next() {\n        var next = this._next;\n        if (next !== undefined) {\n            this._next = next.next;\n            this._current = next;\n            return next.data;\n        }\n    }\n}\n//# sourceMappingURL=LinkedList.js.map","/**\n * Created by AAravindan on 5/7/16.\n */\nimport { LinkedList } from './LinkedList';\nexport default class FixedSizeLinkedList extends LinkedList {\n    constructor(size, maintainHigh, maintainLow) {\n        super();\n        this.size = size;\n        this.maintainHigh = maintainHigh;\n        this.maintainLow = maintainLow;\n        this.periodHigh = 0;\n        this.periodLow = Infinity;\n        if (!size || typeof size !== 'number') {\n            throw ('Size required and should be a number.');\n        }\n        this._push = this.push;\n        this.push = function (data) {\n            this.add(data);\n        };\n    }\n    add(data) {\n        if (this.length === this.size) {\n            this.lastShift = this.shift();\n            this._push(data);\n            //TODO: FInd a better way\n            if (this.maintainHigh)\n                if (this.lastShift == this.periodHigh)\n                    this.calculatePeriodHigh();\n            if (this.maintainLow)\n                if (this.lastShift == this.periodLow)\n                    this.calculatePeriodLow();\n        }\n        else {\n            this._push(data);\n        }\n        //TODO: FInd a better way\n        if (this.maintainHigh)\n            if (this.periodHigh <= data)\n                (this.periodHigh = data);\n        if (this.maintainLow)\n            if (this.periodLow >= data)\n                (this.periodLow = data);\n    }\n    *iterator() {\n        this.resetCursor();\n        while (this.next()) {\n            yield this.current;\n        }\n    }\n    calculatePeriodHigh() {\n        this.resetCursor();\n        if (this.next())\n            this.periodHigh = this.current;\n        while (this.next()) {\n            if (this.periodHigh <= this.current) {\n                this.periodHigh = this.current;\n            }\n            ;\n        }\n        ;\n    }\n    calculatePeriodLow() {\n        this.resetCursor();\n        if (this.next())\n            this.periodLow = this.current;\n        while (this.next()) {\n            if (this.periodLow >= this.current) {\n                this.periodLow = this.current;\n            }\n            ;\n        }\n        ;\n    }\n}\n//# sourceMappingURL=FixedSizeLinkedList.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\n\"use strict\";\nexport class MDMInput extends IndicatorInput {\n}\n;\nexport class MDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var minusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    minusDm = format((downMove > upMove && downMove > 0) ? downMove : 0);\n                }\n                last = current;\n                current = yield minusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new MDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=MinusDM.js.map","import { Indicator, IndicatorInput } from '../indicator/indicator';\n/**\n * Created by AAravindan on 5/8/16.\n */\nexport class PDMInput extends IndicatorInput {\n}\n;\nexport class PDM extends Indicator {\n    constructor(input) {\n        super(input);\n        var lows = input.low;\n        var highs = input.high;\n        var format = this.format;\n        if (lows.length != highs.length) {\n            throw ('Inputs(low,high) not of equal size');\n        }\n        this.result = [];\n        this.generator = (function* () {\n            var plusDm;\n            var current = yield;\n            var last;\n            while (true) {\n                if (last) {\n                    let upMove = (current.high - last.high);\n                    let downMove = (last.low - current.low);\n                    plusDm = format((upMove > downMove && upMove > 0) ? upMove : 0);\n                }\n                last = current;\n                current = yield plusDm;\n            }\n        })();\n        this.generator.next();\n        lows.forEach((tick, index) => {\n            var result = this.generator.next({\n                high: highs[index],\n                low: lows[index]\n            });\n            if (result.value !== undefined)\n                this.result.push(result.value);\n        });\n    }\n    ;\n    static calculate(input) {\n        Indicator.reverseInputs(input);\n        var result = new PDM(input).result;\n        if (input.reversedInput) {\n            result.reverse();\n        }\n        Indicator.reverseInputs(input);\n        return result;\n    }\n    ;\n    nextValue(price) {\n        return this.generator.next(price).value;\n    }\n    ;\n}\n//# sourceMappingURL=PlusDM.js.map","export default class CandlestickFinder {\n    constructor() {\n        // if (new.target === Abstract) {\n        //     throw new TypeError(\"Abstract class\");\n        // }\n    }\n    approximateEqual(a, b) {\n        let left = parseFloat(Math.abs(a - b).toPrecision(4)) * 1;\n        let right = parseFloat((a * 0.001).toPrecision(4)) * 1;\n        return left <= right;\n    }\n    logic(data) {\n        throw \"this has to be implemented\";\n    }\n    getAllPatternIndex(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return [];\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return this._generateDataForCandleStick(data)\n            .map((current, index) => {\n            return strategyFn.call(this, current) ? index : undefined;\n        }).filter((hasIndex) => {\n            return hasIndex;\n        });\n    }\n    hasPattern(data) {\n        if (data.close.length < this.requiredCount) {\n            console.warn('Data count less than data required for the strategy ', this.name);\n            return false;\n        }\n        if (data.reversedInput) {\n            data.open.reverse();\n            data.high.reverse();\n            data.low.reverse();\n            data.close.reverse();\n        }\n        let strategyFn = this.logic;\n        return strategyFn.call(this, this._getLastDataForCandleStick(data));\n    }\n    _getLastDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        if (data.close.length === requiredCount) {\n            return data;\n        }\n        else {\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            let i = 0;\n            let index = data.close.length - requiredCount;\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }\n    }\n    _generateDataForCandleStick(data) {\n        let requiredCount = this.requiredCount;\n        let generatedData = data.close.map(function (currentData, index) {\n            let i = 0;\n            let returnVal = {\n                open: [],\n                high: [],\n                low: [],\n                close: []\n            };\n            while (i < requiredCount) {\n                returnVal.open.push(data.open[index + i]);\n                returnVal.high.push(data.high[index + i]);\n                returnVal.low.push(data.low[index + i]);\n                returnVal.close.push(data.close[index + i]);\n                i++;\n            }\n            return returnVal;\n        }).filter((val, index) => { return (index <= (data.close.length - requiredCount)); });\n        return generatedData;\n    }\n}\n//# sourceMappingURL=CandlestickFinder.js.map"],"names":["format","v","parseFloat","toFixed","sma","input","reverseInputs","result","SMA","reversedInput","reverse","ema","EMA","wma","WMA","wema","WEMA","macd","MACD","averagegain","AverageGain","averageloss","AverageLoss","rsi","RSI","sd","SD","bollingerbands","BollingerBands","wildersmoothing","WilderSmoothing","truerange","TrueRange","adx","ADX","atr","ATR","roc","ROC","kst","KST","stochastic","Stochastic","williamsr","WilliamsR","adl","ADL","obv","OBV","trix","TRIX","morningstar","data","MorningStar","hasPattern","bullishengulfingpattern","BullishEngulfingPattern","bullishharami","BullishHarami","bullishharamicross","BullishHaramiCross","doji","Doji","morningdojistar","MorningDojiStar","downsidetasukigap","DownsideTasukiGap","bullishmarubozu","BullishMarubozu","piercingline","PiercingLine","threewhitesoldiers","ThreeWhiteSoldiers","bullish","BullishPatterns","bearishengulfingpattern","BearishEngulfingPattern","bearishharami","BearishHarami","bearishharamicross","BearishHaramiCross","eveningdojistar","EveningDojiStar","eveningstar","EveningStar","bearishmarubozu","BearishMarubozu","threeblackcrows","ThreeBlackCrows","bearish","BearishPatterns","abandonedbaby","AbandonedBaby","darkcloudcover","DarkCloudCover","dragonflydoji","DragonFlyDoji","gravestonedoji","GraveStoneDoji","bullishspinningtop","BullishSpinningTop","bearishspinningtop","BearishSpinningTop","fibonacciretracement","start","end","levels","map","level","calculated","Math","abs","getAvailableIndicators","AvailableIndicators","push","IndicatorInput","Indicator","nf","this","values","open","high","low","close","volume","Item","prev","next","LinkedList","_length","_tail","_head","_current","_next","tail","undefined","head","current","MAInput","period","price","genFn","counter","sum","list","shift","generator","_this2","forEach","tick","value","calculate","priceArray","exponent","prevEma","nextValue","_this","regeneratorRuntime","length","resetCursor","i","denominator","index","MACDInput","SimpleMAOscillator","SimpleMASignal","oscillatorMAtype","signalMAtype","fastMAProducer","fastPeriod","slowMAProducer","slowPeriod","signalMAProducer","signalPeriod","fast","slow","signal","isNaN","histogram","AvgGainInput","lastValue","currentValue","gain","avgGain","gainSum","AvgLossInput","loss","avgLoss","lossSum","RSIInput","GainProvider","LossProvider","lastAvgGain","lastAvgLoss","RS","currentRSI","FixedSizeLinkedList","size","maintainHigh","maintainLow","periodHigh","periodLow","Infinity","_push","add","lastShift","calculatePeriodHigh","calculatePeriodLow","SDInput","currentSet","iterator","pow","x","mean","sqrt","nextResult","BollingerBandsInput","BollingerBandsOutput","stdDev","_this3","calcSMA","calcsd","lower","upper","middle","pb","MDMInput","MDM","lows","highs","last","downMove","upMove","minusDm","PDMInput","PDM","plusDm","TrueRangeInput","closes","previousClose","max","ADXInput","plusDM","minusDM","emaPDM","emaMDM","emaTR","emaDX","tr","calcTr","calcPDM","calcMDM","lastATR","lastAPDM","lastAMDM","lastPDI","lastMDI","diDiff","diSum","lastDX","smoothedDX","ATRInput","trueRange","trange","avgTrueRange","ROCInput","pastPeriods","KSTInput","rocPer1","ROCPer1","rocPer2","ROCPer2","rocPer3","ROCPer3","rocPer4","ROCPer4","smaPer1","SMAROCPer1","smaPer2","SMAROCPer2","smaPer3","SMAROCPer3","smaPer4","SMAROCPer4","roc1","roc2","roc3","roc4","sma1","sma2","sma3","sma4","signalSMA","firstResult","RCMA2","RCMA3","RCMA4","roc1Result","roc2Result","roc3Result","roc4Result","RCMA1","StochasticInput","d","pastLowPeriods","pastHighPeriods","dSma","k","WilliamsRInput","williamsR","ADLInput","volumes","moneyFlowMultiplier","moneyFlowVolume","round","tickHigh","tickInput","OBVInput","lastClose","TRIXInput","emaOfema","emaOfemaOfema","trixROC","initialema","smoothedResult","doubleSmoothedResult","CandlestickFinder","a","b","toPrecision","requiredCount","warn","name","strategyFn","logic","_generateDataForCandleStick","call","filter","hasIndex","_getLastDataForCandleStick","returnVal","currentData","val","firstdaysOpen","firstdaysClose","firstdaysLow","seconddaysClose","seconddaysHigh","seconddaysLow","thirddaysOpen","thirddaysClose","firstdaysMidpoint","isFirstBearish","isSmallBodyExists","isThirdBullish","gapExists","doesCloseAboveFirstMidpoint","seconddaysOpen","firstdaysHigh","isBullishHaramiCrossPattern","isSecondDayDoji","approximateEqual","daysOpen","daysClose","dojiExists","isSecondBearish","isFirstGapExists","isDownsideTasukiGap","daysHigh","daysLow","isDowntrend","isSecondBullish","isPiercingLinePattern","thirddaysHigh","isUpTrend","isAllBullish","doesOpenWithinPreviousBody","bullishPatterns","reduce","state","pattern","log","isBearishHaramiCrossPattern","isFirstBullish","isThirdBearish","doesCloseBelowFirstMidpoint","thirddaysLow","isDownTrend","isAllBearish","bearishPatterns","firstdayMidpoint","isDarkCloudPattern","isOpenEqualsClose","isHighEqualsOpen","isLowEqualsOpen","bodyLength","upperShadowLength","lowerShadowLength"],"mappings":"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"}